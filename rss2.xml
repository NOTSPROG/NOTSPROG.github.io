<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>NX の 博客</title>
    <link>https://www.nickxu.top/</link>
    
    <image>
      <url>https://www.nickxu.top/static/favicon.jpg</url>
      <title>NX の 博客</title>
      <link>https://www.nickxu.top/</link>
    </image>
    
    <atom:link href="https://www.nickxu.top/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>这家伙真勤奋，什么都留下了</description>
    <pubDate>Sat, 18 Mar 2023 13:16:03 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>告别ELK！轻量级日志收集系统Grafana Loki初上手</title>
      <link>https://www.nickxu.top/2023/03/18/%E5%91%8A%E5%88%ABELK%EF%BC%81%E8%BD%BB%E9%87%8F%E7%BA%A7%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9FGrafana-Loki%E5%88%9D%E4%B8%8A%E6%89%8B/</link>
      <guid>https://www.nickxu.top/2023/03/18/%E5%91%8A%E5%88%ABELK%EF%BC%81%E8%BD%BB%E9%87%8F%E7%BA%A7%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9FGrafana-Loki%E5%88%9D%E4%B8%8A%E6%89%8B/</guid>
      <pubDate>Sat, 18 Mar 2023 13:10:56 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;别急，最近事情太多了，先挖个坑，哈哈😄&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/&quot;&gt;Grafana Loki官方文档&lt;/a&gt;&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>别急，最近事情太多了，先挖个坑，哈哈😄</p><p><a href="https://grafana.com/docs/loki/latest/">Grafana Loki官方文档</a></p>]]></content:encoded>
      
      
      
      
      <comments>https://www.nickxu.top/2023/03/18/%E5%91%8A%E5%88%ABELK%EF%BC%81%E8%BD%BB%E9%87%8F%E7%BA%A7%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9FGrafana-Loki%E5%88%9D%E4%B8%8A%E6%89%8B/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>亚运赛会志愿者通用培训</title>
      <link>https://www.nickxu.top/2023/03/18/%E4%BA%9A%E8%BF%90%E8%B5%9B%E4%BC%9A%E5%BF%97%E6%84%BF%E8%80%85%E9%80%9A%E7%94%A8%E5%9F%B9%E8%AE%AD/</link>
      <guid>https://www.nickxu.top/2023/03/18/%E4%BA%9A%E8%BF%90%E8%B5%9B%E4%BC%9A%E5%BF%97%E6%84%BF%E8%80%85%E9%80%9A%E7%94%A8%E5%9F%B9%E8%AE%AD/</guid>
      <pubDate>Sat, 18 Mar 2023 03:06:57 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303181107743.png&quot; alt=&quot;26B3608C-8FD3-41BB-8D99-858BB38BA514&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 i</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303181107743.png" alt="26B3608C-8FD3-41BB-8D99-858BB38BA514"></p><hr><h1 id="杭州亚运会及赛会志愿服务概述">杭州亚运会及赛会志愿服务概述</h1><p>志愿者含义</p><ul><li>自愿</li><li>不谋物质报酬</li><li>服务于社会公益</li><li>奉献力所能及</li><li>非本职工作</li></ul><p>中国青年志愿者精神</p><ul><li>奉献</li><li>友爱</li><li>互助</li><li>进步</li></ul><p>志愿者基本行为规范</p><ul><li>三会<ol><li>会站</li><li>会笑（难）</li><li>会说</li></ol></li><li>三知<ol><li>知道自己的位置</li><li>知道别人问的位置</li><li>知道卫生间、医疗点、AED及安全出口</li></ol></li><li>三救<ol><li>自救（包括不要泄露联系方式给任何人</li><li>施救</li><li>向谁求助</li></ol></li><li>三受<ol><li>受苦</li><li>受累</li><li>受委屈</li></ol></li><li>五定<ol><li>定人</li><li>定岗</li><li>定时</li><li>定事</li><li>定责</li></ol></li></ul><p>熟记亚运会标志以及吉祥物（略</p><p>志愿者口号：来吧，朋友（friends unite！）</p><p>志愿者之歌：等你来</p><p>岗位服务能力要求</p><p>语言沟通能力</p><p>合作能力</p><p>应变能力</p><hr><h1 id="志愿服务通用礼仪">志愿服务通用礼仪</h1><h2 id="基本原则"><strong>基本原则</strong></h2><ul><li>平等</li><li>尊重</li><li>宽容</li><li>适度</li><li>自律</li></ul><h2 id="形象塑造"><strong>形象塑造</strong></h2><ul><li><p>头发 男：前不覆额 后不触领 侧不掩耳 女：前不遮眉 发不披散 过肩盘起</p></li><li><p>面部 五官</p></li><li><p>肢体</p></li><li><p>统一着装</p></li><li><p>着装整洁</p></li><li><p>配饰要求</p></li></ul><h2 id="礼仪规范"><strong>礼仪规范</strong></h2><ul><li>站 抬头挺胸</li><li>坐 二分之一 左进左出</li><li>走 成行成列</li><li>蹲 高低式 半跪式 交叉式</li></ul><p>三方介绍：尊者优先</p><p>引领：走路上下楼梯电梯出入口（略）</p><h2 id="文明用语"><strong>文明用语</strong></h2><p>不要说：不归我管 不知道不会</p><p>该说不的时候要说不</p><hr><h1 id="上岗要求及纪律规范">上岗要求及纪律规范</h1><h2 id="岗前准备">岗前准备</h2><ul><li><p>吃苦受累</p></li><li></li><li><p>岗位差异</p></li><li><p>遭受委屈</p></li><li><p>熟悉工作内容及周边环境</p></li><li><p>赛事安排及有关信息（赛事、城市）</p></li><li><p>突发事件应对处理</p></li><li><p>专业技能准备</p></li><li><p>说话做事符合礼仪要求</p></li><li><p>做好体能准备</p></li></ul><h2 id="基本要求">基本要求</h2><h3 id="业务操作能力">业务操作能力</h3><ul><li>遵守防疫要求</li><li>坚守工作岗位</li><li>认真履行职责（尽职尽责、通讯畅通、首问负责对口接待</li><li>转换期适应调整</li><li>团队意识</li><li>汇报总结</li></ul><h3 id="礼仪应用能力">礼仪应用能力</h3><ul><li>统一着装</li><li>基本原则：平等适度承诺惯例</li><li>礼仪规范（略</li></ul><h3 id="沟通力">沟通力</h3><p>略</p><h3 id="创造力">创造力</h3><h3 id="感知力">感知力</h3><h3 id="变通力">变通力</h3><h2 id="重要制度">重要制度</h2><ul><li><p>考勤制度</p></li><li><p>请假制度</p></li><li><p>会议制度</p></li><li><p>宣传制度</p></li><li><p>舆情报送制度</p></li><li><p>激励制度</p></li><li><p>督查制度</p></li></ul><h2 id="15不纪律要求">15不纪律要求</h2><ol><li>危害国家安全和利益</li><li>泄漏工作秘密</li><li>泄露隐私</li><li>违法着装和形象纪律</li><li>迟到早退</li><li>出借服装证件</li><li>宗教活动</li><li>接触看惯他人钱物</li><li>小费、商业行为</li><li>利用工作之便获取个人利益</li><li>擅自散播信息</li><li>擅自接受媒体采访</li><li>违法岗位安排</li><li>超出区域</li><li>违反防疫要求</li></ol><h2 id="纪律要求">纪律要求</h2><p>略</p><h2 id="违规处理办法">违规处理办法</h2><p>略</p><hr><h1 id="亚运助残志愿服务知识与技能">亚运助残志愿服务知识与技能</h1><h2 id="杭州亚残运会概况">杭州亚残运会概况</h2><p>略</p><h2 id="助残志愿服务须知">助残志愿服务须知</h2><p>残障人士的共性心理特点</p><ul><li>孤独</li><li>自卑</li><li>敏感猜疑</li><li>情绪强且不稳定</li><li>抱怨心理突出</li><li>富有同情心</li></ul><p>基本原则</p><ul><li>平等尊重</li><li>热情勤快</li><li>帮助适当</li></ul><p>服务理念</p><ol><li>理解需求</li><li>尊重个性</li><li>注重细节</li></ol><p>注意事项</p><ul><li>用词禁忌</li><li>眼神禁忌</li><li>四不：不看残障部位、不问原因、不碰辅助用具、不议论惊讶好奇</li></ul><h2 id="助残志愿服务基本技能">助残志愿服务基本技能</h2><h3 id="视力障碍者">视力障碍者</h3><p>视力障碍者的心理特点</p><ul><li>心理特殊</li><li>听觉突出</li><li>封闭自我</li></ul><p>基本礼仪</p><ol><li><p>交谈前：1-2米，有声音提示、语音平和</p><p>离开时：告知对方</p></li><li><p>初次相识：尽量多地告知自己的信息</p></li><li><p>指挥方位：以对方左右为方位</p></li><li><p>让其跟着走，不要拽着走，做他的眼睛不要做他的手</p></li><li><p>切忌窃窃私语或互相用手势交流</p></li><li><p>用餐：公筷夹到盘中、报菜名</p></li><li><p>不要过度代劳</p></li><li><p>不要领到河沟边、井盖边和车流量大等地方，要帮助回避障碍物</p></li><li><p>不要改变使用物品等摆放位置</p></li></ol><p>技巧</p><p><s>自己看视频（bushi</s></p><h3 id="肢体残障者">肢体残障者</h3><p>心理特点</p><ul><li>有独立性又有依赖性</li><li>不喜欢他人过多责备感染或控制</li><li>不得不依靠他人帮助来解决力不从心的实际问题</li></ul><p>基本礼仪</p><ol><li>不得过多关注残障部位</li><li>与轮椅者交谈：蹲姿</li><li>熟悉轮椅和无障碍环境</li></ol><p>对轮椅使用者：</p><ul><li>腿部和腰发力</li><li>不要急停急起</li><li>电梯要倒着进正着出</li></ul><p><s>又一个视频</s></p><h3 id="心智障碍者">心智障碍者</h3><ol><li>情感行为障碍</li><li>交流意愿、对他人的关系程度低</li><li>语言障碍</li></ol><p>基本礼仪（略</p><p>技巧</p><ul><li>速度要慢</li><li>…</li></ul><h3 id="听力残障者">听力残障者</h3><p>基本礼仪</p><ol><li>微笑用手语问好</li><li>注意手语准确性和表情配合</li></ol><p>技巧</p><ol><li>随身携带纸笔</li></ol><p><s>又一个视频</s></p><h2 id="比赛中的特殊帮助">比赛中的特殊帮助</h2><p>略</p><h2 id="无障碍环境与无障碍设施类别">无障碍环境与无障碍设施类别</h2><p>又一个视频</p><p>无障碍环境概念</p><ul><li>物质环境无障碍</li><li>信息获取无障碍</li></ul><h2 id="亚运会观众引导志愿者须知">亚运会观众引导志愿者须知</h2><p>略</p><hr><h1 id="大型赛会志愿者服务应急事件应对与自我保护">大型赛会志愿者服务应急事件应对与自我保护</h1><h2 id="事件分类及应对原则">事件分类及应对原则</h2><p>分类</p><ul><li>A级：火灾踩踏。组委会处理</li><li>B级：负面舆论、志愿者无法按时用餐等。场馆负责人或主任负责</li><li>C级：志愿者受伤。带队老师处理</li></ul><p>应对原则</p><ul><li><strong>确保安全</strong></li><li><strong>迅速上报</strong></li><li>合理应对</li><li>积极转化</li><li>预防监督</li></ul><h2 id="自我保护">自我保护</h2><p>不适宜志愿者的工作</p><ul><li>志愿者应扮演协助角色</li><li>不承担重大管理责任、安全责任财务责任、重体力劳动、需要专门劳动技能或劳动保护等工作</li></ul><p>主要内容</p><ul><li>防疫</li><li>环境和设施</li><li>交往</li><li>财务</li></ul><h3 id="防疫">防疫</h3><p>略</p><h3 id="环境和设施">环境和设施</h3><ul><li>保证人身周边环境安全</li><li>熟记安全出口消防栓等位置</li></ul><h3 id="交往安全">交往安全</h3><ul><li>不得单独进入服务对象的卧室或更衣室</li><li>尽量不要单独相处</li><li>不得超出服务范围服务</li></ul><h3 id="财务安全">财务安全</h3><ul><li><p>现场服务期间尽量少带东西，容易混淆的物品应做好个人标识</p></li><li><p>上下车东西带齐</p></li></ul><h2 id="常见应急事件处理">常见应急事件处理</h2><h3 id="工作环境产生的问题">工作环境产生的问题</h3><ul><li>天气恶劣</li><li>服务环境差</li><li>电梯故障</li></ul><h3 id="自身遇到的问题">自身遇到的问题</h3><ul><li>身体不适</li><li>意外伤害</li><li>家庭变故</li></ul><p>任何异常及时汇报</p><h3 id="服务对象产生的问题">服务对象产生的问题</h3><ul><li>不听从指挥及骚扰志愿者：耐心劝说、确保自身安全、向业务领域工作人员求助</li><li>服务对象拿出不当宣传资料：确保自身安全的情况下，可迅速收取，别理论</li><li>服务对象受伤：及时协助联系上报，情况危急且有一定能力可以协助处置</li><li>志愿者与服务对象发生冲突：不得发生语言和肢体冲突，把自己人带离服务区域，不要拍视频</li></ul><h3 id="后勤保障产生的问题">后勤保障产生的问题</h3><ul><li>车辆无法达到</li><li>用餐无法按时保证</li></ul><p>找老师就是了</p><h2 id="重大安全事件">重大安全事件</h2><p>A级事件</p><ul><li>交通事故</li><li>触电事故</li><li>火灾事故</li><li>建筑坍塌</li><li>社会安全事件</li></ul><hr><h1 id="急救知识与技能">急救知识与技能</h1><h2 id="心肺复苏术（CPR）">心肺复苏术（CPR）</h2><h3 id="识别心脏骤停">识别心脏骤停</h3><ul><li>无反应意识</li><li>无呼吸或仅有喘息样呼吸</li><li>无脉搏（由专业人员检查）</li></ul><h3 id="工作流程">工作流程</h3><p>观察环境-判断意识-反转体位-判断呼吸-呼救求援-胸外按压（C）-打开气道（A）-人工呼吸（B）-尽早AED除颤</p><p>由于气道梗阻顺序是ABC（溺水、婴儿、严重气道梗阻）</p><ol><li><p>观察环境</p></li><li><p>意识判断</p><p>轻拍重喊，拍肩膀，两侧耳朵喊</p><p>婴儿用手指轻弹足底</p></li><li><p>反转体位：一手保护头颈，另一只手插入对侧腋下，缓慢翻转成仰卧位</p></li><li><p>判断呼吸</p><p>在头部上方“听、看、感觉”约10秒（默念1001，1002，1003…</p></li><li><p>呼救求援</p><ul><li>指定专人做事</li></ul></li><li><p>胸外按压（C）</p><p>手法：一手掌根紧贴胸壁，双手食指相扣，掌根重叠，掌心翘起</p><p>成人（8岁以上）按压要领：</p><ul><li>位置：胸部正中，两乳头连线水平，即胸骨的下半部</li><li>深度：5-6cm</li><li>频率：100-120次/分钟</li><li>每次按压后放松使胸廓恢复到按压位置</li><li>计数（01，02，03…</li></ul></li><li><p>打开气道（A）</p><p>清理口腔异物、仰头举颌</p></li><li><p>人工呼吸（B）</p><ul><li>平静呼吸</li><li>避免过度通气</li><li>吹气时间约1秒，连续吹气2次</li><li>吹气同时看胸廓，确保通气时胸廓隆起</li><li>胸外按压与人工呼吸比例：30:2</li></ul></li></ol><ul><li>停止心肺复苏：活了/医务人员来了</li></ul><h2 id="自动体外除颤仪（AED）">自动体外除颤仪（AED）</h2><ul><li>电极片与皮肤紧贴</li><li>听从语言提示</li></ul><h2 id="鼻出血的现场处理">鼻出血的现场处理</h2><p>低头，用拇指食指紧捏鼻翼5-10分钟</p><p>严重的去医院</p><h2 id="扭伤的现场处理">扭伤的现场处理</h2><p>RICE原则</p><ul><li>R：休息</li><li>I：固定</li><li>C：冷敷</li><li>E：太高伤肢</li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://www.nickxu.top/2023/03/18/%E4%BA%9A%E8%BF%90%E8%B5%9B%E4%BC%9A%E5%BF%97%E6%84%BF%E8%80%85%E9%80%9A%E7%94%A8%E5%9F%B9%E8%AE%AD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>离散数学2期末复习</title>
      <link>https://www.nickxu.top/2023/03/16/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A62%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</link>
      <guid>https://www.nickxu.top/2023/03/16/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A62%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</guid>
      <pubDate>Thu, 16 Mar 2023 01:39:37 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;函数&quot;&gt;函数&lt;/h1&gt;
&lt;h2 id=&quot;u-函数及其性质的判断、函数值、像、原像等的计算-u&quot;&gt;&lt;u&gt;函数及其性质的判断、函数值、像、原像等的计算&lt;/u&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.a</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="函数">函数</h1><h2 id="u-函数及其性质的判断、函数值、像、原像等的计算-u"><u>函数及其性质的判断、函数值、像、原像等的计算</u></h2><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939444.png" alt="image-20230313165348791"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939574.png" alt="image-20230313165415391"></p><ul><li><p>满射：subjective</p></li><li><p>单射：ingective</p></li><li><p>双射：bijective</p></li><li><p>像是函数值的集合</p></li></ul><h2 id="u-函数的复合及反函数-u"><u>函数的复合及反函数</u></h2><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939649.png" alt="image-20230313165621655"></p><p>顺序不要反了</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939746.png" alt="image-20230313165635438"></p><h2 id="集合基数的概念">集合基数的概念</h2><p>略</p><h1 id="图">图</h1><ul><li>阶：顶点数</li><li>度：顶点作为端点的次数</li><li>零图：一条边都没有的图</li><li>平凡图：只有一个点的图</li></ul><h2 id="握手定理">握手定理</h2><ul><li>度数之和等于边数的两倍 $ l = 2m$</li><li>入度之和=出度之和=边数</li><li>奇度顶点的个数是偶数</li></ul><h2 id="可图化条件">可图化条件</h2><ol><li>度数之和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 为偶数</li><li>最大度小于等于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> （你一个点最多也就把其他点连一遍）</li></ol><h2 id="无向完全图">无向完全图</h2><ul><li>每个点都与剩余点连接，记作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> （ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 为阶数）</li><li>边点条数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi>n</mi><mrow><mo fence="true">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow></mrow><mn>2</mn></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\dfrac{n\left( n-1\right) }{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul><h2 id="图的连通性">图的连通性</h2><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939837.png" alt="image-20230315201908204"></p><h2 id="图的矩阵表示">图的矩阵表示</h2><h3 id="关联矩阵">关联矩阵</h3><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939962.png" alt="image-20230315202212716"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939046.png" alt="image-20230315202315433"></p><h3 id="邻接矩阵">邻接矩阵</h3><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939134.png" alt="image-20230315202425046"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939205.png" alt="image-20230315202734790"></p><h3 id="可达矩阵">可达矩阵</h3><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939292.png" alt="image-20230315202839939"></p><h2 id="Dj">Dj</h2><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939350.png" alt="image-20230315220820080"></p><h1 id="树">树</h1><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">m=n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939495.png" alt="image-20230315221032295"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939664.png" alt="image-20230315222128741"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939808.png" alt="image-20230315222542989"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939861.png" alt="image-20230315222835667"></p><ul><li>中序：左中右</li><li>前序：中左右</li><li>后续：左右中</li></ul><h1 id="几种特殊的图">几种特殊的图</h1><h2 id="欧拉图">欧拉图</h2><p>通过所有边一次</p><ul><li>无向图充要：连通无奇度</li><li>有向图充要：强连通、每个点入度等于出度</li></ul><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939948.png" alt="image-20230315203012419"></p><h2 id="哈密顿图">哈密顿图</h2><p>通过所有点一次</p><p>注意是充分条件不是充要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mrow><mo fence="true">(</mo><mi>u</mi><mo fence="true">)</mo></mrow><mo>+</mo><mi>d</mi><mrow><mo fence="true">(</mo><mi>v</mi><mo fence="true">)</mo></mrow><mo>≥</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d\left( u\right) +d\left( v\right) \geq n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">u</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939020.png" alt="image-20230315203547959"></p><h2 id="二部图与平面图">二部图与平面图</h2><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939207.png" alt="image-20230315223131877"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939404.png" alt="image-20230315223346420"></p><ul><li>欧拉公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mi>m</mi><mo>+</mo><mi>r</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">n-m+r=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></li><li>面数之和等于边数两倍</li></ul><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939762.png" alt="image-20230315223635830"></p><ul><li>平面图的必要：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>≤</mo><mn>3</mn><mi>n</mi><mo>−</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">m\leq 3n-6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6</span></span></span></span></li></ul><h1 id="基本的组合计数公式">基本的组合计数公式</h1><ol><li><p>排列公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>A</mi><mi>n</mi><mi>k</mi></msubsup><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy="false">!</mo></mrow><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">A_n^k=\frac{n!}{(n-k)!}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0961em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4001em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mclose mtight">!</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，表示从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个不同的元素中选出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个元素进行排列的方案数。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 开始往后递减相乘 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个数</p></li><li><p>组合公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mi>n</mi><mi>k</mi></msubsup><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy="false">!</mo></mrow><mrow><mi>k</mi><mo stretchy="false">!</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">C_n^k=\frac{n!}{k!(n-k)!}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0961em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4001em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">!</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mclose mtight">!</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，表示从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个不同的元素中选出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个元素进行组合的方案数。</p></li><li><p>重复排列公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">n^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>，表示从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个不同的元素中选出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个元素进行重复排列的方案数。</p></li><li><p>重复组合公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mi>k</mi><mo>−</mo><mn>1</mn></mrow><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">C_{n+k-1}^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1905em;vertical-align:-0.3414em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4169em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3414em;"><span></span></span></span></span></span></span></span></span></span>，表示从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个不同的元素中选出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个元素进行重复组合的方案数。</p></li></ol><ul><li>二项式定理 $$(x+y)^n=\sum_{k=0}^n {n\choose k}x^ky^{n-k}$$</li></ul><h1 id="递推方程、生成函数及应用">递推方程、生成函数及应用</h1><h2 id="递推方程">递推方程</h2><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939810.jpg" alt="image-20230316090850449"></p><p>具体来说，假设方程的一般形式为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>b</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>c</mi><mi>x</mi><mo>+</mo><mi>d</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">ax^3+bx^2+cx+d=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，其导数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">f&#x27;(x)=3ax^2+2bx+c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>。如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f&#x27;(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 的根与原方程的一个根相同，则说明这个根是重根。</p><p>更具体地，可以使用以下的判断方法：</p><ol><li>求出方程的三个根 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">x_1,x_2,x_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>求出方程的导数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f&#x27;(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>。</li><li>求出导数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f&#x27;(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 的两个根 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_1,y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>判断 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是否等于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">x_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，或者判断 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是否等于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">x_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。如果有任意一个条件成立，则说明方程有重根。</li></ol><p>需要注意的是，如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f&#x27;(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 的两个根都与方程的某个根相同，则这个根是二重根；如果有三个根都相同，则这个根是三重根。</p><h2 id="生成函数">生成函数</h2><p>直接放弃</p><h1 id="代数系统">代数系统</h1><ul><li>交换 Commutative</li><li>结合 Assciative</li><li>幂等 Idempotent</li><li>幺元 Identity</li><li>零元 Zero element</li><li>逆元 Inverse element</li></ul><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939900.png" alt="image-20230315174627203"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939047.png" alt="image-20230315173528440"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939230.png" alt="image-20230315174640779"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939376.png" alt="image-20230315174702778"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303160939483.png" alt="image-20230315173735395"></p>]]></content:encoded>
      
      
      
      
      <comments>https://www.nickxu.top/2023/03/16/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A62%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>大二下宿舍上海一日游游记</title>
      <link>https://www.nickxu.top/2023/03/13/%E5%A4%A7%E4%BA%8C%E4%B8%8B%E5%AE%BF%E8%88%8D%E4%B8%8A%E6%B5%B7%E4%B8%80%E6%97%A5%E6%B8%B8%E6%B8%B8%E8%AE%B0/</link>
      <guid>https://www.nickxu.top/2023/03/13/%E5%A4%A7%E4%BA%8C%E4%B8%8B%E5%AE%BF%E8%88%8D%E4%B8%8A%E6%B5%B7%E4%B8%80%E6%97%A5%E6%B8%B8%E6%B8%B8%E8%AE%B0/</guid>
      <pubDate>Mon, 13 Mar 2023 08:26:09 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;别急，等我周四补考完之后就来写&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>别急，等我周四补考完之后就来写</p>]]></content:encoded>
      
      
      
      
      <comments>https://www.nickxu.top/2023/03/13/%E5%A4%A7%E4%BA%8C%E4%B8%8B%E5%AE%BF%E8%88%8D%E4%B8%8A%E6%B5%B7%E4%B8%80%E6%97%A5%E6%B8%B8%E6%B8%B8%E8%AE%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>一行命令打包docker-compose中的镜像</title>
      <link>https://www.nickxu.top/2023/03/13/%E4%B8%80%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%89%93%E5%8C%85docker-compose%E4%B8%AD%E7%9A%84%E9%95%9C%E5%83%8F/</link>
      <guid>https://www.nickxu.top/2023/03/13/%E4%B8%80%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%89%93%E5%8C%85docker-compose%E4%B8%AD%E7%9A%84%E9%95%9C%E5%83%8F/</guid>
      <pubDate>Mon, 13 Mar 2023 08:25:08 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;别急，等我周四补考完之后就来写&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class</description>
        
      
      
      
      <content:encoded><![CDATA[<p>别急，等我周四补考完之后就来写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker save -o docker-images.tar $(docker-compose config | awk <span class="string">&#x27;&#123;if ($1 == &quot;image:&quot;) print $2;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://www.nickxu.top/2023/03/13/%E4%B8%80%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%89%93%E5%8C%85docker-compose%E4%B8%AD%E7%9A%84%E9%95%9C%E5%83%8F/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>在golang项目中使用minio作为存储介质</title>
      <link>https://www.nickxu.top/2023/03/13/%E5%9C%A8golang%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8minio%E4%BD%9C%E4%B8%BA%E5%AD%98%E5%82%A8%E4%BB%8B%E8%B4%A8/</link>
      <guid>https://www.nickxu.top/2023/03/13/%E5%9C%A8golang%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8minio%E4%BD%9C%E4%B8%BA%E5%AD%98%E5%82%A8%E4%BB%8B%E8%B4%A8/</guid>
      <pubDate>Mon, 13 Mar 2023 08:24:37 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;别急，等我周四补考完之后就来写&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>别急，等我周四补考完之后就来写</p>]]></content:encoded>
      
      
      
      
      <comments>https://www.nickxu.top/2023/03/13/%E5%9C%A8golang%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8minio%E4%BD%9C%E4%B8%BA%E5%AD%98%E5%82%A8%E4%BB%8B%E8%B4%A8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>第五届字节跳动青训营项目总结</title>
      <link>https://www.nickxu.top/2023/03/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</link>
      <guid>https://www.nickxu.top/2023/03/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</guid>
      <pubDate>Mon, 13 Mar 2023 08:24:18 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;s&gt;别急，等我周四补考完之后就来写&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;先扔点材料进来，有空再写&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303182106439.png&quot; alt=&quot;ima</description>
        
      
      
      
      <content:encoded><![CDATA[<p><s>别急，等我周四补考完之后就来写</s></p><p>先扔点材料进来，有空再写</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303182106439.png" alt="image-20230318210642346"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303182107112.png" alt="image-20230318210714092"></p><p>项目地址：<a href="https://github.com/h68u/h68u-tiktok-app-microservice">https://github.com/h68u/h68u-tiktok-app-microservice</a></p>]]></content:encoded>
      
      
      
      
      <comments>https://www.nickxu.top/2023/03/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>雅思英语考试基本介绍</title>
      <link>https://www.nickxu.top/2023/03/06/%E9%9B%85%E6%80%9D%E8%8B%B1%E8%AF%AD%E8%80%83%E8%AF%95%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</link>
      <guid>https://www.nickxu.top/2023/03/06/%E9%9B%85%E6%80%9D%E8%8B%B1%E8%AF%AD%E8%80%83%E8%AF%95%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</guid>
      <pubDate>Mon, 06 Mar 2023 13:13:08 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;这是本人课上记的笔记，不代表我会去考（&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;考试分类&quot;&gt;考试分类&lt;/h2&gt;
&lt;p&gt;两大类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A类 学术类 Acadmic ☑️&lt;/li&gt;
&lt;li&gt;G类 培训类/移民类 （简单很</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>这是本人课上记的笔记，不代表我会去考（</p></blockquote><h2 id="考试分类">考试分类</h2><p>两大类</p><ul><li>A类 学术类 Acadmic ☑️</li><li>G类 培训类/移民类 （简单很多</li></ul><p>听力口语部分两个是一样的，阅读写作G类简单</p><p>（其实还有一种生活技能类，和我们关系不大，很多小孩子考</p><p>A类中的分类</p><ul><li><p>普通雅思</p><p>成绩只作为英语水平能力证明</p></li><li><p>UKVI雅思</p><p>成绩除了证明能力之外，还可以帮助你申请英国的签证</p></li></ul><p>如果绝对有把握能过就考普通雅思，不然就UKVI（会多一点钱，题目一样，但是学校会告诉你可以申请签证，提前几个月去当地的语言班，之后再考一遍</p><h2 id="考试信息">考试信息</h2><p>IELTS</p><p>2小时45分钟，包含听说读写，换算后总分9分，0.25分一档</p><ul><li>听 30min</li><li>读 60min</li><li>写 60min</li><li>说 11-14min</li></ul><p>同类的考试还有托福</p><ul><li>都是标准化考试，难度差不多体型不一样</li><li>雅思主办方两个英国，一个澳大利亚，所以要熟悉一下英式和澳大利亚方言口音</li><li>托福是美国办的</li><li>托福全机考，雅思有人面对面</li><li>雅思作文难些，托福阅读难些</li><li>雅思托福大多数时候是通用的</li></ul><p>口语考试</p><ul><li><p>和托福不一样，雅思考两天，口语（说）单独安排在考试那周的周一到周五（提前完成）</p><p>其他的在礼拜六的上午</p></li><li><p>雅思口语题库一年换4次（一个季度），建议先让其他人考一下，参考一下其他人的题目</p></li><li><p>考场在学校，其实可以在11教门口待着，下来一个问一个</p></li><li><p>老师变数很大，有很和蔼的，有很严的，但是不要被影响，态度好的也不一定打高分</p></li></ul><p>分数水平</p><ul><li>全国分数最多是在 5.5-6 分（但是各种各样的人存在，导致分数比较低</li><li>杭电的努力一下 6.5-7 分</li><li>阅读和听力提升较快</li></ul><h2 id="考试流程">考试流程</h2><h3 id="听力">听力</h3><ul><li><p>30 min 4 sections 40 questions（每题1分</p></li><li><p>难度递增</p><p>策略：简单题一定要保证正确</p></li><li><p>60%以上英式英语，夹杂美式甚至是印度（</p></li></ul><p>四部分内容</p><ol><li>二人日常社交情景对话（一问一答</li><li>日常社交单人独白</li><li>四人教育/训练对话场景</li><li>单人学术类型独白</li></ol><h3 id="阅读">阅读</h3><ul><li><p>60min 3 passages 40 questions</p></li><li><p>test are taken from books, magazines, journals and newspaper</p></li><li><p>有些人会遇到加试（雅思托福都有，很常见</p><p>别人都在写作文了你还在阅读，别紧张</p><p>加一篇测试的新题目（不计分，随机挑人测试一下新题目难度，但是你不知道是哪一题，时间也会增加</p></li><li><p>托福和雅思有个不一样是阅读的最后一题可能是两分或者三分</p></li></ul><h3 id="写作">写作</h3><ul><li><p>60min 2tasks</p></li><li><p>task1 20min 小作文 150字 三分之一的分</p><p>图表类，描述</p></li><li><p>task2 40min 大作文 250字 三分之二的分</p><p>议论文（AB选一个说明理由，某件事已经发生了怎么解决）</p></li><li><p>不是字越多越好，不超过正负10%最好</p></li><li><p>内容重要</p></li><li><p>托福大小作文分数一样，小作文先看文章，再听，再写</p></li><li><p>要积累单词，雅思可能有很多没接触过的主题（比如说犯罪）</p></li><li><p>教育相关的话题是最多的</p></li></ul><p>印象分</p><ul><li>字体不潦草</li><li>段与段之间空一行</li><li>每段第一个字顶格</li></ul><h3 id="口语">口语</h3><ul><li><p>it is not what you say, it is how you say it!</p></li><li><p>要学会扯</p></li><li><p>4-5min 自我介绍和采访，一问一答（每个问题的回答要有20～30s</p></li><li><p>3-4min 个人长独白 给你一张题卡，有一分钟时间准备，两分钟时间演讲，有草稿纸铅笔</p></li><li><p>4-5min 结合第二部分的题目交互式谈话</p></li></ul><p>Four criteria</p><ul><li>Fluency and coherence<ul><li>不能有长时间的空白（&gt;1s）</li><li>Thinking for idea is fine Thinking for words is not fine</li><li>用最直观的方法体现逻辑：结构、指示词连接词</li><li>自然（Humm…I guess … it’s cool</li></ul></li><li>Lexical resource<ul><li>放弃一些所谓的万能动词make hold have（一个动词和很多名称可以搭配make friends/tea/coffee/bed/face</li><li>使用更专业更形象的动词</li><li>学习更加地道的讲法</li><li>修辞手法：排比+押韵</li><li>不是到现场现编，准备很多熟悉的素材</li><li>尝试改述 不要一直用题目里面的表述</li></ul></li><li>Grammatical range and accuracy<ul><li>复杂句式</li><li>不用明显依赖于准备好的段子</li><li>对观点有证据和支持</li></ul></li><li>Pronunciation<ul><li>单词读错（重音放错）</li><li>元音</li><li>英式、美式混杂</li></ul></li></ul><p>在口语和写作中存在主观分，有0.5分左右的浮动差异</p><p>印象分</p><ul><li>凳子不能坐满</li><li>面带微笑</li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://www.nickxu.top/2023/03/06/%E9%9B%85%E6%80%9D%E8%8B%B1%E8%AF%AD%E8%80%83%E8%AF%95%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ChatGPT对话记录（四）：手动递归下载依赖的麻烦</title>
      <link>https://www.nickxu.top/2023/03/05/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%89%8B%E5%8A%A8%E9%80%92%E5%BD%92%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96%E7%9A%84%E9%BA%BB%E7%83%A6/</link>
      <guid>https://www.nickxu.top/2023/03/05/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%89%8B%E5%8A%A8%E9%80%92%E5%BD%92%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96%E7%9A%84%E9%BA%BB%E7%83%A6/</guid>
      <pubDate>Sun, 05 Mar 2023 14:23:18 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;我在pkgs.org下包的时候总是要手动递归下载依赖，真的好麻烦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;是的，手动递归下载依赖的确很麻烦，尤其是在安装大型软件包时。幸运的是，有些包管理器提供了自动递归下载依赖的功能，这可以大大简化安装</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>我在pkgs.org下包的时候总是要手动递归下载依赖，真的好麻烦</p></blockquote><hr><p>是的，手动递归下载依赖的确很麻烦，尤其是在安装大型软件包时。幸运的是，有些包管理器提供了自动递归下载依赖的功能，这可以大大简化安装过程。</p><p>例如，如果你正在使用Ubuntu或Debian发行版，可以使用APT包管理器来自动下载软件包及其依赖项。只需运行以下命令即可安装软件包并自动下载其所有依赖项：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> install <span class="keyword">package</span>-name</span><br></pre></td></tr></table></figure><p>对于其他发行版，也可能有类似的包管理器可用，你可以参考对应的文档了解如何使用它们来自动下载依赖项。</p><p>如果你使用的包管理器不支持自动递归下载依赖，那么你可以考虑使用类似于&quot;apt-rdepends&quot;的第三方工具，该工具可以帮助你自动递归下载依赖项。使用这种工具可能需要一些命令行技能，但可以大大减少手动递归依赖的麻烦。</p><p>最后，有些软件包可能会提供单独的安装程序或安装脚本，可以自动下载并安装所有依赖项。在下载软件包之前，建议先查看软件包的文档，以确定是否提供了这种安装方法。</p><hr><blockquote><p>我是说我要在一个离线的服务器上安装软件，然后我找到了包，但是有一堆依赖，一个一个下太麻烦了</p></blockquote><hr><p>我明白了你的问题，如果你需要在一个离线的服务器上安装软件包及其依赖项，而又不想一个一个手动下载它们，可以考虑使用类似于&quot;apt-offline&quot;的工具。</p><p>&quot;apt-offline&quot;是一个命令行工具，它可以帮助你在一个在线的计算机上生成一个安装程序，该程序包含了软件包及其所有依赖项的下载链接。然后，你可以将该安装程序复制到离线的服务器上，使用该程序在离线服务器上安装软件包及其依赖项。</p><p>以下是使用&quot;apt-offline&quot;的基本步骤：</p><ol><li><p>在在线计算机上安装&quot;apt-offline&quot;工具：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> install apt-offline</span><br></pre></td></tr></table></figure></li><li><p>在在线计算机上生成安装程序，该程序包含软件包及其依赖项的下载链接。假设要安装的软件包是&quot;package-name&quot;，可以运行以下命令：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-offline <span class="keyword">set</span> offline.sig --install-packages <span class="keyword">package</span>-name</span><br></pre></td></tr></table></figure><p>这将在当前目录中生成一个名为&quot;offline.sig&quot;的签名文件，其中包含了软件包及其所有依赖项的下载链接。</p></li><li><p>将签名文件复制到离线服务器上。</p></li><li><p>在离线服务器上使用&quot;apt-offline&quot;安装程序来安装软件包及其依赖项。运行以下命令：</p><p><code>sudo apt-offline install offline.sig</code></p><p>这将自动下载软件包及其所有依赖项，并将它们安装在离线服务器上。</p></li></ol><p>请注意，&quot;apt-offline&quot;只能下载安装软件包及其依赖项，而不能下载更新。如果你需要在离线服务器上更新软件包及其依赖项，请考虑使用其他工具或方法。</p><hr><blockquote><p>有没有适用于centos的</p></blockquote><hr><p>是的，对于CentOS或其他基于Red Hat的发行版，可以使用类似于&quot;yumdownloader&quot;或&quot;reposync&quot;的工具来下载软件包及其依赖项。</p><p>&quot;yumdownloader&quot;是一个命令行工具，可以帮助你下载指定软件包及其依赖项的RPM包。以下是使用&quot;yumdownloader&quot;下载软件包及其依赖项的基本步骤：</p><ol><li><p>在在线计算机上安装&quot;yum-utils&quot;软件包，该软件包包含了&quot;yumdownloader&quot;工具：</p><p><code>sudo yum install yum-utils</code></p></li><li><p>在在线计算机上使用&quot;yumdownloader&quot;下载软件包及其依赖项。假设要下载的软件包是&quot;package-name&quot;，可以运行以下命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yumdownloader --resolve <span class="keyword">package</span>-name</span><br></pre></td></tr></table></figure><p>这将下载软件包及其所有依赖项的RPM包，并将它们保存在当前目录中。</p></li><li><p>将RPM包复制到离线服务器上，并使用&quot;rpm&quot;命令进行安装。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -ivh <span class="keyword">package</span>-name.rpm</span><br></pre></td></tr></table></figure><p>这将安装软件包及其依赖项。</p></li></ol><p>&quot;reposync&quot;是另一个基于&quot;yum&quot;的工具，它可以帮助你下载整个软件仓库中的软件包及其依赖项。以下是使用&quot;reposync&quot;下载软件包及其依赖项的基本步骤：</p><ol><li><p>在在线计算机上安装&quot;yum-utils&quot;软件包，该软件包包含了&quot;reposync&quot;工具：</p><p><code>sudo yum install yum-utils</code></p></li><li><p>在在线计算机上使用&quot;reposync&quot;下载软件包及其依赖项。假设要下载的软件包来自于名为&quot;repo-name&quot;的软件仓库，可以运行以下命令：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo reposync -r repo-name <span class="attr">--download-metadata</span> <span class="attr">--download-path</span>=/path/<span class="selector-tag">to</span>/save/packages</span><br></pre></td></tr></table></figure><p>这将下载&quot;repo-name&quot;仓库中的所有软件包及其依赖项，并将它们保存在指定的目录中。</p></li><li><p>将下载的RPM包复制到离线服务器上，并使用&quot;rpm&quot;命令进行安装。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -ivh <span class="keyword">package</span>-name.rpm</span><br></pre></td></tr></table></figure><p>这将安装软件包及其依赖项。</p></li></ol><p>请注意，下载整个软件仓库的方法可能需要较长时间和较大的存储空间，因此请确保你有足够的磁盘空间和时间。同时，请注意下载的软件包及其依赖项可能会有版本冲突等问题，请确保在离线服务器上使用的软件包版本与在线计算机上的一致。</p>]]></content:encoded>
      
      
      <category domain="https://www.nickxu.top/categories/ChatGPT-%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95/">ChatGPT 对话记录</category>
      
      
      <category domain="https://www.nickxu.top/tags/ChatGPT/">ChatGPT</category>
      
      <category domain="https://www.nickxu.top/tags/Linux/">Linux</category>
      
      
      <comments>https://www.nickxu.top/2023/03/05/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%89%8B%E5%8A%A8%E9%80%92%E5%BD%92%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96%E7%9A%84%E9%BA%BB%E7%83%A6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>服务器离线安装Docker</title>
      <link>https://www.nickxu.top/2023/03/05/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85Docker/</link>
      <guid>https://www.nickxu.top/2023/03/05/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85Docker/</guid>
      <pubDate>Sun, 05 Mar 2023 03:45:23 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;奶奶的昨天在学校的服务器上离线安装docker，折腾了一天都没搞定（&lt;/p&gt;
&lt;p&gt;你要下包吧，一堆递归依赖要手动递归下载🙄&lt;/p&gt;
&lt;p&gt;然后现在docker也没有源码编译了&lt;/p&gt;
&lt;p&gt;我在官方文档找哇，找到了个直接下二进制文件的&lt;/p&gt;
&lt;p&gt;然后搞定了&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>奶奶的昨天在学校的服务器上离线安装docker，折腾了一天都没搞定（</p><p>你要下包吧，一堆递归依赖要手动递归下载🙄</p><p>然后现在docker也没有源码编译了</p><p>我在官方文档找哇，找到了个直接下二进制文件的</p><p>然后搞定了</p><p><a href="https://docs.docker.com/engine/install/binaries/#install-daemon-and-client-binaries-on-linux">https://docs.docker.com/engine/install/binaries/#install-daemon-and-client-binaries-on-linux</a></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303052235444.png" alt="image-20230305223522937"></p>]]></content:encoded>
      
      
      
      
      <comments>https://www.nickxu.top/2023/03/05/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85Docker/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>写在大二下开学之初</title>
      <link>https://www.nickxu.top/2023/03/01/%E5%86%99%E5%9C%A8%E5%A4%A7%E4%BA%8C%E5%BC%80%E5%AD%A6%E4%B9%8B%E5%88%9D/</link>
      <guid>https://www.nickxu.top/2023/03/01/%E5%86%99%E5%9C%A8%E5%A4%A7%E4%BA%8C%E5%BC%80%E5%AD%A6%E4%B9%8B%E5%88%9D/</guid>
      <pubDate>Wed, 01 Mar 2023 13:30:14 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;如你所见，我已经两个多月没有更新博客了，现在开学了，总得恢复更新节奏吧（&lt;/p&gt;
&lt;p&gt;最近很乱，就随便写写寒假到现在发生的事吧，想到哪里写到哪里&lt;/p&gt;
&lt;h2 id=&quot;手搓学习通&quot;&gt;手搓学习通&lt;/h2&gt;
&lt;p&gt;如果你要问我我寒假这两个月干什么去了，我会和你说，我一个人折</description>
        
      
      
      
      <content:encoded><![CDATA[<p>如你所见，我已经两个多月没有更新博客了，现在开学了，总得恢复更新节奏吧（</p><p>最近很乱，就随便写写寒假到现在发生的事吧，想到哪里写到哪里</p><h2 id="手搓学习通">手搓学习通</h2><p>如果你要问我我寒假这两个月干什么去了，我会和你说，我一个人折腾完了两个项目</p><p>一个是文艺数法学院的一个产品包装教学系统的后端，一个是青训营的项目，先说第一个</p><p>这个项目是上个学期杭助群里看见的，缺后端的人，然后我就进了</p><p>进了之后发现两个前端，就我一个后端（乐</p><p>我为什么想参加呢？第一个自然是有💰（三个人分了大几千块），第二个是想熟悉一下 <code>go-zero</code> 框架，第三个也是想丰富一下简历</p><p>对后端来说，我需要完成以下功能：班级系统，然后可以布置作业，学生相互批改作业，有班级云盘放资料，有教学视频给学生看…</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303012225538.png" alt="image-20230301222502268"></p><blockquote><p><s>乐！这不就是学习通嘛（</s></p></blockquote><hr><h2 id="夜之城度假">夜之城度假</h2><p>我很快冲完了班级和云盘两个服务，剩一个作业的系统没写，毕竟有点累了，就想摆一下</p><p>然后正好 2077 打半价，这游戏缝缝补补了两年，我看了一下测评，现在可以入手了</p><p>讲真，我感觉现在这质量已经勉强能配得上发售的宣传了，我认为其实还不错，最后给了个好评</p><p>一开始我还没搞懂各种机制，第一个档被各种虐，去看攻略才熟悉，其实你偷芯片的时候上到天台拿到三郎的武士刀觉，后面就很舒服了</p><p>然后第二个档我打算尝试一下<a href="https://www.bilibili.com/video/BV1bV4y1T784/?share_source=copy_web&amp;vd_source=5ca30838bf3c8b357bddca1ff2565902">刀剑流</a>，跟着教程走很舒服，那几天我真的沉迷其中，基本上就是住在夜之城了</p><p>我已经很久没有遇到这么让我惊艳的作品了，上一次还是大表哥2</p><p>可惜的是，这东西剧情太短了，大概40小时就干完主线了，让然后我又去看各种攻略，尝试各种流派</p><p>然后我第三个档尝试的是<a href="https://www.bilibili.com/video/BV14V4y1p7Wn/?share_source=copy_web&amp;vd_source=5ca30838bf3c8b357bddca1ff2565902">黑客流</a>，这玩到后期是真的爽，拿着网监5基本上是瞪谁谁死，拿着应龙单挑荒坂塔那都不是事</p><p>而且我玩的是女V，这配音也是一流的，和原子之心的冰箱是一个人哦！</p><details class="toggle" ><summary class="toggle-button" style="">玩女V必看（不用感谢我😎</summary><div class="toggle-content"><p>捏脸：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">皮肤4</span><br><span class="line">发型12</span><br><span class="line">眼睛11</span><br><span class="line">眉毛7</span><br><span class="line">鼻子5</span><br><span class="line">嘴巴6</span><br><span class="line">下巴4</span><br><span class="line">耳朵14</span><br></pre></td></tr></table></figure><p>完美身材：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">版本：1.6，不上图了，就单纯敲字，请自行实验</span><br><span class="line">1.前期准备</span><br><span class="line">在衣柜里面设置3套衣服，第1套是正常的（就是什么都穿的），第2套什么都不穿，第3套准备一套特殊穿搭（全身连体的衣服）</span><br><span class="line">装备里面，全身上下除了一条正常的裤子以外，什么都不要有（武器可以保留）</span><br><span class="line">2.操作方法</span><br><span class="line">一、装备里面只穿裤子（已经穿了就不用管）和第3套特殊穿搭</span><br><span class="line">二、换成第1套有衣服的正常着装</span><br><span class="line">三、脱内裤</span><br><span class="line">四、穿第2套没衣服的着装</span><br><span class="line">3.最终结果</span><br><span class="line">不管读盘、退出，还是穿脱各种装备，始终都能保持完美身材</span><br></pre></td></tr></table></figure></div></details><p>最后我大概玩了 170 个小时吧，把所有的结局和所有的支线都玩过一遍了，感觉支线比主线的东西多多了，而且很多东西都是很用心的，同时也无不对阉割的内容感到遗憾，比如说冰箱里的神迹后面本来还有一串任务的，但是都被砍了</p><p>玩完游戏本体我又去把边缘行者找来看了一遍，毕竟在夜之城住了好久了，动画的带入感真是极强（里面的地方都认得在什么地方</p><p>看完之后后劲也是很大的，又回去把重锤锤了几遍（乐</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303012256100.png" alt="image-20230301225612064"></p><blockquote><p>结束在夜之城的度假之后，我找了张 V 的公寓的桌面壁纸，真的是挺好看的</p></blockquote><hr><h2 id="青训营破防">青训营破防</h2><p>然后就是青训营开营了，第五届字节跳动青训营其实和第三届差不多，后端的课相差不大，项目居然也是一模一样的（写一个精简版的抖音后端）</p><p>因为这次我想带一个大一的一起做项目，所以我选的是基础班，然后带了几个大一的和yeebing一起做项目</p><p>为了和第三届的项目（单体gin）拉开点差距，我上了微服务，然后自然是go-zero框架</p><p>这样以来对新人的压力也不会很大，业务代码可以参考第三届的项目，微服务架构可以参考我的项目</p><p>也可以让评委看看我这一套怎么样，毕竟相同的架构的项目是要上生产环境的，面试系统也是用的是go-zero</p><p>项目公布的那一晚，我就拉着他们开会，各种分析，各种讲解，各种手把手，BB了好几个小时</p><p><a href="/2023/01/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E4%BC%9A%E8%AE%AE%E7%BA%AA%E8%A6%81/">第五届字节跳动青训营项目会议纪要</a></p><p>然后我把架子搭起来写了一些东西，就把大部分东西想留给他们锻炼锻炼</p><p>然后呢？啥动静都没有（</p><p>平时基本也就我一个人在群里面说话，真的是破大防</p><p>但是有个大一的其实还行，学的很快，一上来就搞定了三个接口，也就这位比较让我满意</p><p>原定是过年前要把所有功能都冲完，结果等到初十还没搞完</p><p>然后这时候我一边要把另一个项目补完，一边还要给这个项目擦屁股，我真的是服了，这帮人基本是啥都帮不了</p><p>真的是让人心寒，基本变成单人项目了（幸好yeebing也在帮忙，不然我真的得累死</p><p>这时还有个负责消息相关的态度还不错，勉勉强强地完成了相关接口，但是其他的我根本就不想评价，还有直接说自己啥都不懂的，我那天讲那么久都白讲了？</p><p>这绝对不是能力问题，而是态度，即使你说你啥都不会写，那你打下手总行吧？我写完了接口需要有人测试，完成了所有接口需要有人用app测试，结果呢？根本没人理我</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303012353313.png" alt="image-20230301235341289"></p><blockquote><p>我发誓我以后再也不带生人做项目了</p></blockquote><p>这些还不完全是陌生人，是上个学期面试招进来的，每个人我都是亲自面过的，就这种素质，我第三届的时候其实也是啥都不懂，gorm的语句都是依葫芦画瓢+copilot帮我写的，但是我前前后后commit数也有个两位数，也积极配合测试，甚至当时还买了个二手的荣耀Magic2来做测试机</p><p>最后还是我来擦屁股，把各种bug修了，把各个接口完成了，但是我还得上缓存和消息队列做各种优化</p><p>然后返校前我还得去把科目四给考了，事情真的不少，那段时间真的是忙</p><hr><h2 id="第一次装机">第一次装机</h2><p>来点过年的小插曲，缓和一点气氛</p><p>过年的时候我爸的办公室要更新几台机子，我看了一下情况，从一些老古董里面挑了两台勉强还能用的，可以升级一下配置，然后还得再装一台新机</p><p>虽然我初中就开始折腾硬件了，但是我家都是笔记本，也就是换个内存硬盘之类的，但是台式机还没折腾过</p><p>我就趁这个机会学习一下，然后我就在B上看硬件茶谈的装机教程，感觉我也行了，就去买了一堆硬件</p><table><thead><tr><th>类型</th><th>名称&amp;链接</th><th>价格</th></tr></thead><tbody><tr><td>机箱</td><td><a href="https://item.taobao.com/item.htm?spm=a1z0d.6639537/tb.0.0.78f17484jRRuQt&amp;id=591613843038">傻瓜超人 K88</a></td><td>159</td></tr><tr><td>主板</td><td><a href="https://item.taobao.com/item.htm?spm=a1z0d.6639537/tb.0.0.78f17484jRRuQt&amp;id=679885751158">昂达B660-VH-B</a></td><td>379</td></tr><tr><td>CPU</td><td><a href="https://item.taobao.com/item.htm?spm=a1z0d.7625083.0.0.5c5f4e69Go4Mnh&amp;id=667946031150">I3-12100</a></td><td>685</td></tr><tr><td>内存</td><td><a href="https://item.jd.com/100014056864.html#none">金百达 8GB*2 DDR4 3200</a></td><td>249</td></tr><tr><td>硬盘</td><td><a href="https://item.jd.com/100011216263.html#none">京东京造 5系 512GB M.2 PCIe3.0</a></td><td>229</td></tr><tr><td>电源</td><td><a href="https://mobile.yangkeduo.com/goods1.html?_wvx=10&amp;refer_share_uin=CG7CTRXRWNP5BMMEAQADLBCQTQ_GEXDA&amp;refer_share_id=mTe407rsWBayLY7YtvMIwpKXYT4GUoRC&amp;share_uin=CG7CTRXRWNP5BMMEAQADLBCQTQ_GEXDA&amp;page_from=101&amp;_oak_share_snap_num=21800&amp;_oak_share_detail_id=0&amp;_wv=41729&amp;refer_share_channel=copy_link&amp;pxq_secret_key=VC2CGZFS4SW275VHIN3PXW7ZJ74WJXMHULVMFXQBMLTJSKVMNBHA&amp;goods_id=275474400230">技嘉 GP-P450B</a></td><td>179</td></tr><tr><td>散热</td><td><a href="https://mobile.yangkeduo.com/goods1.html?_wvx=10&amp;refer_share_uin=CG7CTRXRWNP5BMMEAQADLBCQTQ_GEXDA&amp;refer_share_id=hZoF0YrdP8oFmpXWgVawTndGpklYjDTb&amp;share_uin=CG7CTRXRWNP5BMMEAQADLBCQTQ_GEXDA&amp;page_from=101&amp;_oak_share_snap_num=4150&amp;_oak_share_detail_id=0&amp;_wv=41729&amp;refer_share_channel=copy_link&amp;pxq_secret_key=VC2CGZFS4SW275VHIN3PXW7ZJ6NTFUQ4FZVVEV65G2YIIOTB7KSA&amp;goods_id=186518396784">乔思伯CR1400</a></td><td>60</td></tr></tbody></table><div class="fj-gallery"><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022227112.jpeg" alt="45A34C3F-7970-45F6-994C-8BFFA542164A_1_105_c"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022229536.jpeg" alt="52B834D4-3717-41B9-AD06-3E5B0E1F577F_1_105_c"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022230382.png" alt="image-20230302223013352"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022230309.png" alt="image-20230302223026273"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022236262.jpeg" alt="15395619-4734-4365-8DF8-450639F9A6D8_1_105_c"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022236946.jpeg" alt="5038140C-3966-4297-A4EC-59719D8C5C78_1_105_c"></p>          </div><p>然后我就开装了，等我按照教程在机箱里面装好了之后，才发现点不亮（悲</p><p>然后我就被迫拆出来重新折腾（早知道就先测试好了再装进去了</p><p>排查一圈感觉是主板的问题，我就去找店家理论，店家指导一通也搞不定，只能退货</p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022238768.png" alt="5DCA0CE9-5492-4CA2-84FC-20DE063847D6" style="zoom:50%;" /><blockquote><p>真是中彩票了，以后再也不买昂达的主板了（</p></blockquote><p>但是这个时候我要回家了，所以我得把机箱搬回去再折腾</p><p>等过了几天我收到新主板了之后，我终于点亮了</p><p>但是很奇怪，我一进PE就蓝屏，没办法，只能通过官方镜像安装了</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022241678.jpeg" alt="57291E8C-2002-43D2-ACA5-832971258317_1_105_c"></p><blockquote><p>办公嘛，用什么Windows11，直接Windows10 LTSC 就够了</p></blockquote><p>但是呢，这个非模组电源的线也太丑了吧（</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022242543.jpeg" alt="3A6117B2-EF7B-4B99-B0A6-92D6960A3844_1_105_c"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022242185.jpeg" alt="A6464FB8-58CE-4D09-87AE-6E05EE69478D_1_105_c"></p><p>这个我感觉理线好麻烦哇，算了就这样吧，反正不是我用（bushi</p><p>以后要是自己装机的话大概了会用全模组电源了</p><p>这次装机也算是学了很多吧，什么主板显卡之类的之前也没了解多少，这次算是入了DIY的门了，关注了一堆UP，我以后如果要搞一台台式肯定会是自己组了</p><hr><h2 id="开学考挂科">开学考挂科</h2><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303012350735.png" alt="image-20230301235053699" style="zoom:50%;" /><blockquote><p>大物和离散要是能隔个一天就好了</p></blockquote><p>返校了，第二天就考了习概，然后有点空档，我就一直在折腾青训营的项目，折腾各种优化，redis、消息队列、异步、定时任务等等</p><p>然后离散的考试和提交项目的时间重合了，所以我还得早点搞完这个项目，还得写个<a href="https://hdu-help.feishu.cn/docx/KuGidErAIogvWDxcn2VcTrfUntb">汇报文档</a></p><p>结果就是，我折腾到大物的前两天才开始全力复习大物，而离散是一点都没看（毕竟大物比离散难得多</p><p>考完大物我基本就是个废人了，毕竟已经连续工作十几天了，感觉是真的累，期间也没放松过（我就带了个MacBook，也玩不了游戏</p><p>而第二天早上就要考离散，留给我缓冲的时间不多，只能说浅浅复习一波</p><p>到了第二天，我能记得的真的不多，基本上昨天复习的全忘记了，也就图树这类高中竞赛的时候学过的有点把握</p><p>更要命的是，我做到最后十分钟的时候，才发现试卷还有一面，有两道大题，我自己倒吸一口凉气</p><p>人麻了，这怕不是第一次要补考</p><p>然后前几天结果出来了，大物最终成绩61分飘过，离散56分不及格</p><hr><h2 id="前路在何方">前路在何方</h2><p>挂科了心情总是有些不爽的，毕竟我读书这么多年从来也没有遇到考试不及格的情况</p><p>但是谁知道呢？可能要发生点好事就必须要有一些前置条件吧，好事多磨应该就是也个道理</p><p>然后目前在等青训营初评，前不久不是gsoc的组织公布了嘛，<a href="https://summerofcode.withgoogle.com/programs/2023/organizations">我就去看了一下</a></p><p>结果呢？没几个项目是用golang的</p><p>看来看去，感觉也就个keploy的重构客户端的还有点能力完成，但是肯定也一堆人</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022257833.png" alt="image-20230302225744796"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022308720.png" alt="image-20230302230849672"></p><blockquote><p>然后iyear提醒了一手这个项目的 maintainer ，奶奶的，居然全是阿三（</p></blockquote><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303022301658.png" alt="image-20230302230119617"></p><p>要知道，印度人在海外可是很抱团的，选上的肯定会是印度人，这项目怕不是用来从Google手上骗经费的（bushi</p><p>为什么就没有国人的项目包容一下华人呢？</p><p>看来看去我感觉还是准备开源之夏吧，ospp比gsoc简单不少，gsoc还要各种攀关系，混脸熟，人情世故真的是在世界各地都有</p><p>So？前路在何方？</p><p>我也不知道，走一步算一步吧，这个学期想把k8s学一学，然后书架上还有一堆书可以看一看，总不能一直放着吃灰吧</p><p>暑假大概率还要参加亚运会志愿者的培训，这学期还是挺忙的</p><p>前几天产品包装系统的甲方又提了些修改意见，还有一堆事情等着我呢</p><p>边走边看吧！</p>]]></content:encoded>
      
      
      <category domain="https://www.nickxu.top/categories/%E9%9A%8F%E7%AC%94%E4%B8%8E%E6%80%BB%E7%BB%93/">随笔与总结</category>
      
      
      <category domain="https://www.nickxu.top/tags/%E9%9A%8F%E7%AC%94/">随笔</category>
      
      
      <comments>https://www.nickxu.top/2023/03/01/%E5%86%99%E5%9C%A8%E5%A4%A7%E4%BA%8C%E5%BC%80%E5%AD%A6%E4%B9%8B%E5%88%9D/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ChatGPT对话记录（三）：GORM的行级锁</title>
      <link>https://www.nickxu.top/2023/02/19/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9AGORM%E7%9A%84%E8%A1%8C%E7%BA%A7%E9%94%81/</link>
      <guid>https://www.nickxu.top/2023/02/19/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9AGORM%E7%9A%84%E8%A1%8C%E7%BA%A7%E9%94%81/</guid>
      <pubDate>Sat, 18 Feb 2023 16:14:50 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;你知不知道gorm的Clauses方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;是的，我知道gorm的Clauses方法。在GORM中，Clauses方法是用于在查询语句中添加子句的函数。它允许您使用原始的SQL语句或GORM的构建器函</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>你知不知道gorm的Clauses方法</p></blockquote><hr><p>是的，我知道gorm的Clauses方法。在GORM中，Clauses方法是用于在查询语句中添加子句的函数。它允许您使用原始的SQL语句或GORM的构建器函数来添加子句。</p><p>Clauses方法返回的是*DB对象，您可以在此对象上继续调用其他GORM函数，例如Where、Order、Limit等，以构建完整的查询语句。Clauses方法的语法如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db<span class="selector-class">.Clauses</span>(clauseBuilder...)</span><br></pre></td></tr></table></figure><p>其中，clauseBuilder可以是一个字符串表示的原始SQL语句，也可以是一个GORM构建器函数，例如Select、Where、Order、Limit等。</p><p>例如，以下代码使用Clauses方法添加了一个子句，然后使用Where和Find函数来执行查询操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.Clauses(<span class="string">&quot;SELECT * FROM users WHERE age &gt; ?&quot;</span>, 18).Where(<span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;John&quot;</span>).Find(&amp;<span class="built_in">users</span>)</span><br></pre></td></tr></table></figure><hr><blockquote><p>里面有个clause.Locking，能解释一下嘛</p></blockquote><hr><p>是的，<code>clause.Locking</code>是GORM中的一个子句，用于为查询语句添加<code>FOR UPDATE</code>或<code>FOR SHARE</code>语句，以实现数据库中的行级锁。</p><p>在GORM中，您可以通过在<code>Clauses</code>函数中传递<code>clause.Locking</code>子句来为查询语句添加行级锁。具体语法如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="title function_ invoke__">Clauses</span>(clause.Locking&#123;<span class="attr">Strength</span>: <span class="string">&quot;UPDATE&quot;</span>, <span class="attr">Tables</span>: []<span class="keyword">string</span>&#123;<span class="string">&quot;table1&quot;</span>&#125;&#125;).<span class="title function_ invoke__">Find</span>(&amp;result)</span><br></pre></td></tr></table></figure><p>上面的代码将在<code>table1</code>表上添加<code>FOR UPDATE</code>行级锁，并使用<code>Find</code>函数执行查询操作。如果您想使用<code>FOR SHARE</code>语句，则可以将<code>Strength</code>属性设置为<code>&quot;SHARE&quot;</code>。</p><p>请注意，<code>clause.Locking</code>子句只对支持行级锁的数据库有效，例如PostgreSQL、MySQL等。在不支持行级锁的数据库中，此子句将不起作用。此外，行级锁是一种悲观锁，它会对查询的行进行加锁，因此在高并发的情况下，使用行级锁可能会导致性能问题，需要谨慎使用。</p><hr><blockquote><p>type Locking struct { Strength string Table Table Options string } 它的原始定义包含3个值，分别是什么意思？</p></blockquote><hr><p><code>Locking</code>结构体的原始定义包含三个字段，它们分别是<code>Strength</code>、<code>Table</code>和<code>Options</code>。</p><ol><li><p><code>Strength</code>字段用于指定锁的类型，可以是<code>&quot;UPDATE&quot;</code>或<code>&quot;SHARE&quot;</code>。<code>&quot;UPDATE&quot;</code>表示添加<code>FOR UPDATE</code>行级锁，它可以用于查询时对返回的记录进行排他性锁定，以避免并发问题。<code>&quot;SHARE&quot;</code>表示添加<code>FOR SHARE</code>行级锁，它用于查询时对返回的记录进行共享锁定，以确保多个事务可以同时读取记录。</p></li><li><p><code>Table</code>字段用于指定要加锁的表，它可以是字符串类型的表名，也可以是一个<code>Table</code>结构体类型。<code>Table</code>结构体通常用于自定义表的别名、引用和转义。</p></li><li><p><code>Options</code>字段用于指定锁的其他选项，它是一个字符串类型的选项列表，可以包含任何其他锁定选项，例如<code>NOWAIT</code>、<code>SKIP LOCKED</code>等。默认情况下，该字段为<code>&quot;&quot;</code>，即不指定其他选项。</p></li></ol><p>总之，<code>Locking</code>结构体提供了一种简便的方式来指定查询语句中的行级锁类型、加锁表和其他选项，从而帮助开发者更方便地控制数据的并发访问。</p><hr><blockquote><p>如果我不指定table会怎样</p></blockquote><hr><p>如果在使用<code>clause.Locking</code>时不指定表名，GORM会使用默认的表名来添加行级锁。默认情况下，GORM使用查询的主表作为行级锁的表，即如果您使用<code>Model</code>函数指定了模型对象，则主表是该模型对象对应的数据库表。</p><p>例如，以下代码使用<code>clause.Locking</code>在默认表上添加<code>FOR UPDATE</code>锁：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.Model(<span class="operator">&amp;</span><span class="keyword">User</span>&#123;&#125;).<span class="keyword">Where</span>(&quot;id = ?&quot;, <span class="number">1</span>).Clauses(clause.Locking&#123;Strength: &quot;UPDATE&quot;&#125;).<span class="keyword">Update</span>(&quot;name&quot;, &quot;new_name&quot;)</span><br></pre></td></tr></table></figure><p>上面的代码将在<code>users</code>表上添加<code>FOR UPDATE</code>锁，因为<code>User</code>模型对应的数据库表是<code>users</code>表。</p><p>如果您不希望使用默认表名，可以通过在<code>Locking</code>子句中指定<code>Table</code>字段来自定义表名，例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.Model(<span class="operator">&amp;</span><span class="keyword">User</span>&#123;&#125;).<span class="keyword">Where</span>(&quot;id = ?&quot;, <span class="number">1</span>).Clauses(clause.Locking&#123;Strength: &quot;UPDATE&quot;, <span class="keyword">Table</span>: clause.Table&#123;Name: &quot;user_lock&quot;&#125;&#125;).<span class="keyword">Update</span>(&quot;name&quot;, &quot;new_name&quot;)</span><br></pre></td></tr></table></figure><p>上面的代码将在<code>user_lock</code>表上添加<code>FOR UPDATE</code>锁，而不是默认的<code>users</code>表。</p><p>总之，如果您没有指定表名，则GORM会使用默认表名添加行级锁，但是如果您想自定义表名，则可以通过在<code>Locking</code>子句中指定<code>Table</code>字段来实现。</p>]]></content:encoded>
      
      
      <category domain="https://www.nickxu.top/categories/ChatGPT-%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95/">ChatGPT 对话记录</category>
      
      
      <category domain="https://www.nickxu.top/tags/ChatGPT/">ChatGPT</category>
      
      <category domain="https://www.nickxu.top/tags/GORM/">GORM</category>
      
      <category domain="https://www.nickxu.top/tags/Go/">Go</category>
      
      
      <comments>https://www.nickxu.top/2023/02/19/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9AGORM%E7%9A%84%E8%A1%8C%E7%BA%A7%E9%94%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ChatGPT对话记录（二）：使用apt完全删除软件包</title>
      <link>https://www.nickxu.top/2023/02/17/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BD%BF%E7%94%A8apt%E5%AE%8C%E5%85%A8%E5%88%A0%E9%99%A4%E8%BD%AF%E4%BB%B6%E5%8C%85/</link>
      <guid>https://www.nickxu.top/2023/02/17/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BD%BF%E7%94%A8apt%E5%AE%8C%E5%85%A8%E5%88%A0%E9%99%A4%E8%BD%AF%E4%BB%B6%E5%8C%85/</guid>
      <pubDate>Fri, 17 Feb 2023 11:21:50 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;我如何使用apt完全删除软件包，连配置文件也一起删的那种&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;要使用apt命令完全删除软件包以及其相关的配置文件，可以使用&lt;code&gt;purge&lt;/code&gt;选项。以下是具体的步骤：&lt;/p&gt;
&lt;ol&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>我如何使用apt完全删除软件包，连配置文件也一起删的那种</p></blockquote><hr><p>要使用apt命令完全删除软件包以及其相关的配置文件，可以使用<code>purge</code>选项。以下是具体的步骤：</p><ol><li><p>打开终端，使用root权限或sudo权限登录。</p></li><li><p>运行以下命令以卸载软件包及其配置文件：</p><p><code>sudo apt purge 软件包名称</code></p><p>将<code>软件包名称</code>替换为要删除的软件包的名称。</p></li><li><p>在确认提示中，输入<code>Y</code>以确认卸载操作。</p></li><li><p>如果您还想删除软件包相关的依赖项，可以使用<code>autoremove</code>命令。运行以下命令：</p><p><code>sudo apt autoremove</code></p><p>这将删除已经没有用的软件包及其依赖项。</p></li></ol><p>请注意，在卸载软件包及其配置文件之前，请确保您已经备份了任何重要的配置文件和数据。</p><hr>]]></content:encoded>
      
      
      <category domain="https://www.nickxu.top/categories/ChatGPT-%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95/">ChatGPT 对话记录</category>
      
      
      <category domain="https://www.nickxu.top/tags/ChatGPT/">ChatGPT</category>
      
      <category domain="https://www.nickxu.top/tags/Linux/">Linux</category>
      
      
      <comments>https://www.nickxu.top/2023/02/17/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BD%BF%E7%94%A8apt%E5%AE%8C%E5%85%A8%E5%88%A0%E9%99%A4%E8%BD%AF%E4%BB%B6%E5%8C%85/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ChatGPT对话记录（一）：通过SSH密钥进行身份验证</title>
      <link>https://www.nickxu.top/2023/02/17/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%80%9A%E8%BF%87SSH%E5%AF%86%E9%92%A5%E8%BF%9B%E8%A1%8C%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/</link>
      <guid>https://www.nickxu.top/2023/02/17/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%80%9A%E8%BF%87SSH%E5%AF%86%E9%92%A5%E8%BF%9B%E8%A1%8C%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/</guid>
      <pubDate>Thu, 16 Feb 2023 16:54:10 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;如何将公钥添加到 ~/.ssh/authorized_keys 中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;要将公钥添加到&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;文件中，可以按照以下步骤操作：&lt;/p&gt;
&lt;o</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>如何将公钥添加到 ~/.ssh/authorized_keys 中</p></blockquote><hr><p>要将公钥添加到<code>~/.ssh/authorized_keys</code>文件中，可以按照以下步骤操作：</p><ol><li><p>将公钥复制到本地计算机的剪贴板中。可以使用以下命令从远程计算机获取公钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh user@remote_host <span class="string">&quot;cat ~/.ssh/id_rsa.pub&quot;</span></span><br></pre></td></tr></table></figure><p>请确保将<code>user</code>和<code>remote_host</code>替换为您要连接的远程计算机的用户名和主机名。</p></li><li><p>在本地计算机上打开终端窗口并使用以下命令将公钥添加到<code>~/.ssh/authorized_keys</code>文件中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>将公钥粘贴到终端窗口中，然后按<code>Ctrl-D</code>保存文件并退出终端。</p></li></ol><p>现在，您应该能够使用SSH密钥连接到远程计算机，而无需输入密码。请确保将公钥添加到正确的用户的<code>~/.ssh/authorized_keys</code>文件中，否则您可能无法成功连接。</p><p>（本人PS：这里应该是说反了，应该是把自己的公钥放到远程的 <code>authorized_keys</code>  ）</p><hr><blockquote><p>我已经添加了公钥，但提示 <a href="mailto:root@1.15.112.229">root@1.15.112.229</a>: Permission denied (password).</p></blockquote><hr><p>如果您已经将公钥添加到远程主机的<code>~/.ssh/authorized_keys</code>文件中，但仍然收到密码验证失败的错误消息，则可能存在以下问题：</p><ol><li><p>您在连接时使用了错误的用户名：请确保您在连接时使用了正确的用户名，这是指您添加公钥时使用的用户名。</p></li><li><p>权限问题：请确保您的<code>~/.ssh</code>目录和<code>~/.ssh/authorized_keys</code>文件的权限设置正确。这两个文件应该只有您本人可以读写，而不是其他人。可以使用以下命令修复权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 700 ~/.ssh</span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>SELinux或防火墙问题：如果您的远程主机启用了SELinux或防火墙，请确保它们不会阻止您的SSH连接。您可以通过临时禁用SELinux或防火墙来测试它们是否是问题的根本原因。</p></li><li><p>SSH服务器配置问题：最后，您可能需要检查远程主机上的SSH服务器配置文件以确保它已正确配置以允许公钥身份验证。如果您无法解决问题，请尝试联系远程主机管理员或系统管理员以获取更多帮助。</p></li></ol><hr><blockquote><p>Load key “/Users/nx/.ssh/id_rsa.pub”: invalid forma</p></blockquote><hr><p>这个错误通常出现在您正在尝试使用错误的文件来加载SSH密钥。</p><p><code>.pub</code>文件是SSH密钥对中的公钥，而不是私钥。请确保您正在使用私钥文件（默认为<code>id_rsa</code>）而不是公钥文件来加载SSH密钥。</p><p>请使用以下命令来加载私钥文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add /path/to/private/key</span><br></pre></td></tr></table></figure><p>请将<code>/path/to/private/key</code>替换为您的私钥文件的实际路径。如果您不确定私钥文件的位置，可以使用以下命令查找：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -al ~/.ssh</span><br></pre></td></tr></table></figure><p>上述命令将列出您<code>.ssh</code>目录中的所有文件和目录，包括您的SSH密钥对。在此列表中查找包含<code>id_rsa</code>的文件，这将是您的私钥文件。</p><p>请注意，私钥文件的权限也非常重要。在加载SSH密钥之前，请确保私钥文件的权限设置为只有您自己可以读写，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 /path/to/private/key</span><br></pre></td></tr></table></figure><p>如果上述方法不起作用，请检查您的私钥文件是否已被损坏。您可以尝试创建一个新的SSH密钥对，并将公钥添加到您想要连接的远程主机上。</p><hr><blockquote><p>我怀疑是远程服务器没有开启公钥登录</p></blockquote><hr><p>如果您已经确保本地计算机上的SSH密钥和远程计算机上的<code>~/.ssh/authorized_keys</code>文件都正确设置，但仍然无法使用SSH密钥进行身份验证，则可能是因为远程计算机上的SSH服务器没有正确配置以允许SSH密钥身份验证。</p><p>首先，请确保远程计算机上的SSH服务器已启用公钥身份验证。在远程计算机上打开<code>/etc/ssh/sshd_config</code>文件，并检查以下设置是否正确设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>如果这些设置未正确设置，您需要将它们更改为上述值，保存文件并重新启动SSH服务器。</p><p>如果仍然无法使用SSH密钥进行身份验证，请检查远程计算机上的SSH服务器日志以获取更多详细信息。在大多数Linux系统上，SSH服务器日志文件位于<code>/var/log/auth.log</code>或<code>/var/log/secure</code>中。检查日志文件是否包含有关SSH连接和身份验证失败的任何错误消息。</p><p>如果您仍然无法解决问题，请尝试联系远程计算机的管理员或系统管理员以获取更多帮助。</p>]]></content:encoded>
      
      
      <category domain="https://www.nickxu.top/categories/ChatGPT-%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95/">ChatGPT 对话记录</category>
      
      
      <category domain="https://www.nickxu.top/tags/ChatGPT/">ChatGPT</category>
      
      <category domain="https://www.nickxu.top/tags/Linux/">Linux</category>
      
      <category domain="https://www.nickxu.top/tags/SSH/">SSH</category>
      
      
      <comments>https://www.nickxu.top/2023/02/17/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%80%9A%E8%BF%87SSH%E5%AF%86%E9%92%A5%E8%BF%9B%E8%A1%8C%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>第五届字节跳动青训营项目会议纪要</title>
      <link>https://www.nickxu.top/2023/01/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E4%BC%9A%E8%AE%AE%E7%BA%AA%E8%A6%81/</link>
      <guid>https://www.nickxu.top/2023/01/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E4%BC%9A%E8%AE%AE%E7%BA%AA%E8%A6%81/</guid>
      <pubDate>Fri, 13 Jan 2023 11:55:35 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;明确目标&quot;&gt;明确目标&lt;/h1&gt;
&lt;h2 id=&quot;项目质量&quot;&gt;项目质量&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202301131955844.png&quot; alt=&quot;image</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="明确目标">明确目标</h1><h2 id="项目质量">项目质量</h2><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202301131955844.png" alt="image-20230113125129881"></p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202301131955948.png" alt="image-20230113130844275"  /><blockquote><p>我们的目标是一等奖，重振h68u荣光</p></blockquote><p>有第三届的项目可供参考：<a href="https://github.com/h68u/h68u-tiktok-app">https://github.com/h68u/h68u-tiktok-app</a></p><h2 id="DDL">DDL</h2><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202301131955142.png" alt="1280X1280"></p><blockquote><p>约寒假结束，但肯定要提前完成</p></blockquote><h2 id="个人要求">个人要求</h2><blockquote><p>不要当死人</p></blockquote><p>当你遇到问题时：</p><ul><li>自己折腾</li><li>搜索引擎</li><li>B站</li><li>copilot</li><li>ChatGPT</li><li>群里问</li></ul><p>必备技能：</p><ul><li>gorm</li><li>redis</li><li>熟悉 go-zero</li></ul><hr><h1 id="项目规划">项目规划</h1><h2 id="框架">框架</h2><p>go-zero</p><h3 id="原因-优点">原因/优点</h3><ul><li>有现成模板，鄙人的项目：<a href="https://github.com/hdu-packaging-design/hdu-packaging-design-be">https://github.com/hdu-packaging-design/hdu-packaging-design-be</a></li><li>微服务</li><li>及其清晰的项目结构</li><li>方便结合 docker、k8s 部署</li><li>易于搭配各种监控组件</li><li>日后参加面试系统开发</li></ul><h2 id="时间规划">时间规划</h2><p>最晚过年前冲出功能完善的demo，再继续改进</p><h2 id="可改进问题">可改进问题</h2><h3 id="缓存一致性">缓存一致性</h3><p>暂时先更新数据库后删除缓存值，后面再考虑要不要上消息队列等</p><p>可参考资料：</p><ul><li><a href="https://juejin.cn/post/7156237969202872350">聊一聊缓存和数据库不一致性问题的产生及主流解决方案以及扩展的思考</a></li><li><a href="https://juejin.cn/post/7168291215753314311">万字图文讲透数据库缓存一致性问题</a></li></ul><h3 id="热点数据">热点数据</h3><p>分库分表</p><p>可参考资料：</p><p><a href="https://juejin.cn/post/7155784807702593572">好好的系统，为什么要分库分表？</a></p><p><a href="https://juejin.cn/post/7146016771936354312">Mysql大数据表处理方案</a></p><p>B站也有相关的视频</p><p>其他解决方法后面再思考</p><h3 id="监控组件">监控组件</h3><ul><li>prometheus+grafan 服务监控</li><li>jaeger 链路追踪</li><li>kafka+Elasticsearch 日志分析</li></ul><p><a href="https://www.waterflow.link/articles/1661696351405">https://www.waterflow.link/articles/1661696351405</a> 连着3篇</p><p>B 站 go-zero官方视频也有这方面内容</p><h2 id="团队分工">团队分工</h2><p>自由分工</p>]]></content:encoded>
      
      
      
      
      <comments>https://www.nickxu.top/2023/01/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E4%BC%9A%E8%AE%AE%E7%BA%AA%E8%A6%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>『CI/CD』使用Webhook通知服务器</title>
      <link>https://www.nickxu.top/2022/12/19/%E3%80%8ECI-CD%E3%80%8F%E4%BD%BF%E7%94%A8Webhook%E9%80%9A%E7%9F%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <guid>https://www.nickxu.top/2022/12/19/%E3%80%8ECI-CD%E3%80%8F%E4%BD%BF%E7%94%A8Webhook%E9%80%9A%E7%9F%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <pubDate>Mon, 19 Dec 2022 13:50:41 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;在前面的 Github Actions 工作流中，我们最后都是直接使用 SSH 连接在服务器上执行命令，但是这样很不优雅，而且会被认为是服务器被异常登录&lt;/p&gt;
&lt;p&gt;所以可以尝试使用 webhook&lt;/p&gt;
&lt;p&gt;简单地说，就是先在服务器准备一个部署脚本，然后一直运行一个</description>
        
      
      
      
      <content:encoded><![CDATA[<p>在前面的 Github Actions 工作流中，我们最后都是直接使用 SSH 连接在服务器上执行命令，但是这样很不优雅，而且会被认为是服务器被异常登录</p><p>所以可以尝试使用 webhook</p><p>简单地说，就是先在服务器准备一个部署脚本，然后一直运行一个守护进程监听请求，触发 GitHub Actions 时发送请求，守护进程被收到后自动执行部署脚本</p><h1 id="准备部署脚本">准备部署脚本</h1><p>准备 <code>redeploy.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">sudo docker login --username=***** registry.cn-hangzhou.aliyuncs.com --password <span class="string">&quot;******&quot;</span></span><br><span class="line"></span><br><span class="line">sudo docker-compose pull</span><br><span class="line"></span><br><span class="line">sudo docker-compose up -d</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个很容易理解，在写完之后记得测试一下能不能成功运行</p><h1 id="编写-webhook">编写 webhook</h1><p>这里为了方便，就直接使用一个库：<a href="https://github.com/adnanh/webhook">https://github.com/adnanh/webhook</a></p><p>这东西看文档直接 apt 就能安装了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install webhook</span><br></pre></td></tr></table></figure><p>使用方法就是编写配置文件，然后运行时带上配置文件，就能根据规则监听请求</p><p>新建一个 <code>webhook.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webhook&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;execute-command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/home/admin/projects/github-actions-test/redeploy.sh&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;command-working-directory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/home/admin/projects/github-actions-test&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;trigger-rule&quot;</span><span class="punctuation">:</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1234567&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;parameter&quot;</span><span class="punctuation">:</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;url&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;token&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>简单地说就是规定了执行的脚本，还有触发条件：url 中有 <code>token</code> 参数并且值为 <code>1234567</code> 时就触发</p><p>这东西还有很多高级用法，比如传参数给脚本，具体可以看文档，这里就不演示了</p><p>先测试一下运行效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webhook -hooks webhook.json -verbose</span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202301041903842.png" alt="image-20230104190325333"></p><p>然后手动请求一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">&quot;http://www.nickxu.top:9000/hooks/webhook?token=1234567&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202301041906287.png" alt="image-20230104190615260"></p><p>看来成功执行了脚本</p><p>现在就用 <a href="/2022/02/15/%E3%80%8ELinux%E3%80%8Fscreen-%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/">screen</a> 或者其他方法让这东西跑在后台就行</p><h1 id="修改-GitHub-Actions-脚本">修改 GitHub Actions 脚本</h1><p>接下来的过程就显而易见了，在 GitHub Actions 脚本中加上这个请求就行</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Webhook</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">curl</span> <span class="string">--location</span> <span class="string">--request</span> <span class="string">GET</span> <span class="string">&#x27;$<span class="template-variable">&#123;&#123; secrets.WEBHOOK_URL &#125;&#125;</span>&#x27;</span> </span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202301041922078.png" alt="image-20230104192204053"></p>]]></content:encoded>
      
      
      <category domain="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/">运维</category>
      
      <category domain="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/CICD/">CICD</category>
      
      
      <category domain="https://www.nickxu.top/tags/GitHub-Actions/">GitHub Actions</category>
      
      <category domain="https://www.nickxu.top/tags/CICD/">CICD</category>
      
      <category domain="https://www.nickxu.top/tags/Webhook/">Webhook</category>
      
      
      <comments>https://www.nickxu.top/2022/12/19/%E3%80%8ECI-CD%E3%80%8F%E4%BD%BF%E7%94%A8Webhook%E9%80%9A%E7%9F%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>『CI/CD』结合GitHub Actions+Docker实现自动化部署</title>
      <link>https://www.nickxu.top/2022/12/14/%E3%80%8ECI-CD%E3%80%8F%E7%BB%93%E5%90%88GitHub-Actions-Docker%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</link>
      <guid>https://www.nickxu.top/2022/12/14/%E3%80%8ECI-CD%E3%80%8F%E7%BB%93%E5%90%88GitHub-Actions-Docker%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</guid>
      <pubDate>Wed, 14 Dec 2022 07:42:48 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;上一篇 &lt;a href=&quot;/2022/12/09/%E4%BD%BF%E7%94%A8GitHub-Actions%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A</description>
        
      
      
      
      <content:encoded><![CDATA[<p>上一篇 <a href="/2022/12/09/%E4%BD%BF%E7%94%A8GitHub-Actions%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/">『CI/CD』使用GitHub Actions实现简单的自动化部署 </a> 中实现了简单的自动化部署，本篇来介绍一下使用 docker 的做法 （NX 整整折腾了两天呢）</p><hr><h1 id="基本流程">基本流程</h1><p>首先要明确一下最终的运行流程，一共有4个步骤</p><ol><li>更新代码，提交至GitHub</li><li>GitHub 触发 Actions，自动 build 镜像，并推送至镜像仓库</li><li>服务器拉取最新镜像</li><li>重新启动容器</li></ol><p>因为今天时间有点紧我就不画图了（明天赶回家，要收拾东西）</p><hr><h1 id="本地原生运行测试">本地原生运行测试</h1><p>首先第一步要介绍一下我们的项目，还是上次的仓库：<a href="https://github.com/NX-Official/github-actions-test">https://github.com/NX-Official/github-actions-test</a> ，当然啦，现在是 <code>v3</code> 分支</p><p>为了方便我本次使用一个 go-zero 的 demo，<a href="https://go-zero.dev/cn/docs/goctl/other">因为它来生成 Dockerfile 比较方便</a></p><p>首先和文档一样创建一个 hello 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goctl api new hello</span><br></pre></td></tr></table></figure><p>为了模拟可能的业务场景，我现在给这个 demo 增加两个要求：</p><ul><li>我这个项目需要使用 mysql 和 redis 等服务，但是 docker 中的 mysql 会对性能造成影响，我可能需要直接使用宿主机上的端口与服务</li><li>本地测试环境和实际环境有不同，我希望到时候能从宿主机的某个目录读取配置文件，而不是打包在一起</li></ul><p>所以我在这个 dome 中连接了 <code>127.0.0.1</code> 的 mysql 和 redis 服务，并从文件中读取配置，你可以在项目中看见</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141618888.png" alt="image-20221214161805856"></p><p>现在，我在 <code>hello</code> 目录下原生运行本项目，没有问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go run hello.go</span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141619878.png" alt="image-20221214161946849"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141620396.png" alt="image-20221214162038371"></p><h1 id="本地打包-运行测试">本地打包&amp;运行测试</h1><p>接下来，用 docker 打包试试</p><p>使用 go-zero 的 goctl 工具可以方便地将当前项目打包（如果你不是 go-zero 你就得自己写 <code>Dockerfile</code> 了，有关教程烂大街，不属于本节内容）</p><ul><li>在 <code>hello</code> 目录下一键生成 <code>Dockerfile</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goctl docker -go hello.go</span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141630594.png" alt="image-20221214163025558"></p><p>为了方便与整洁，我选择使用 docker-compose 来构建运行，而不是在命令行手动折腾一堆参数</p><p>在项目根目录新建 <code>docker-compose.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">hello-api:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">hello/Dockerfile</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8888:8888&quot;</span></span><br><span class="line">    <span class="attr">stdin_open:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后运行，你就会发现</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141632654.png" alt="image-20221214163247625"></p><p>在容器里是不能使用 <code>127.0.0.1</code> 来访问宿主机的本地服务的</p><p>这个问题可以看我的另一篇 <a href="/2022/12/13/%E3%80%8EDocker%E3%80%8FDocker%E5%86%85%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%9A%84%E7%AB%AF%E5%8F%A3/">『Docker』Docker内程序如何访问宿主机的端口</a> ，结论就是要把 <code>127.0.0.1</code> 换成 <code>host.docker.internal</code></p><p>但是观察自动生成的 Dockerfile ，他是直接把配置文件打包进去了</p><p>所以要改一下，把那两行注释一下</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> golang:alpine AS builder</span><br><span class="line"></span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> stage=gobuilder</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> CGO_ENABLED <span class="number">0</span></span><br><span class="line"><span class="keyword">ENV</span> GOPROXY https://goproxy.cn,direct</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#x27;</span> /etc/apk/repositories</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk update --no-cache &amp;&amp; apk add --no-cache tzdata</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /build</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> go.mod .</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> go.sum .</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> go mod download</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . .</span></span><br><span class="line"><span class="comment"># COPY hello/etc /app/etc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> go build -ldflags=<span class="string">&quot;-s -w&quot;</span> -o /app/hello hello/hello.go</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> scratch</span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=builder /usr/share/zoneinfo/Asia/Shanghai /usr/share/zoneinfo/Asia/Shanghai</span></span><br><span class="line"><span class="keyword">ENV</span> TZ Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=builder /app/hello /app/hello</span></span><br><span class="line"><span class="comment"># COPY --from=builder /app/etc /app/etc</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;./hello&quot;</span>, <span class="string">&quot;-f&quot;</span>, <span class="string">&quot;etc/hello-api.yaml&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>然后运行时挂一下自己的配置文件，在根目录新建一个 <code>etc</code> 目录，在里面也弄一个 <code>hello-api.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Name:</span> <span class="string">hello-api</span></span><br><span class="line"><span class="attr">Host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">Port:</span> <span class="number">8888</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">DBList:</span></span><br><span class="line">  <span class="attr">Mysql:</span></span><br><span class="line">    <span class="attr">Address:</span> <span class="string">host.docker.internal:3306</span></span><br><span class="line">    <span class="attr">Username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">Password:</span> <span class="string">&quot;12345678&quot;</span></span><br><span class="line">    <span class="attr">DBName:</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">  <span class="attr">Redis:</span></span><br><span class="line">    <span class="attr">Address:</span> <span class="string">host.docker.internal:6379</span></span><br><span class="line">    <span class="attr">Password:</span></span><br></pre></td></tr></table></figure><p>然后修改 <code>docker-compose.yml</code> ，加上两行，把目录映射进去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">volumes:</span><br><span class="line">  - ./etc:/app/etc</span><br></pre></td></tr></table></figure><p>再运行，没有问题</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141647802.png" alt="image-20221214164728750"></p><hr><h1 id="打包上传-本机重新拉取测试">打包上传&amp;本机重新拉取测试</h1><p>现在尝试一下将这个 image 上传到托管仓库，再在服务器拉取看看能不能跑</p><p>综合考虑，打算使用阿里云的容器镜像服务</p><p>前往 <a href="https://cr.console.aliyun.com/cn-hangzhou/instances">https://cr.console.aliyun.com/cn-hangzhou/instances</a> 创建一个个人实例</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141701559.png" alt="image-20221214170130504"></p><p>然后随便创个命名空间</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141702139.png" alt="image-20221214170209112"></p><p>再在这个空间里创一个仓库</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141702223.png" alt="image-20221214170259201"></p><p>进入仓库可以看见一些提示</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141211895.png" alt="image-20221214121126876"></p><p>我们现在需要将镜像推送至阿里云，所以需要按照下面的步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker login --username=***** registry.cn-hangzhou.aliyuncs.com</span><br><span class="line">$ docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/****/github-actions-test:[镜像版本号]</span><br><span class="line">$ docker push registry.cn-hangzhou.aliyuncs.com/*****/github-actions-test:[镜像版本号]</span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141208170.png" alt="image-20221214120857147"></p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141210874.png" alt="image-20221214121036852"></p><p>然后我在这个测试项目中新建一个 <code>assume_server_dir</code> 目录，假设这里就是服务器上的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nx@NXsMacBook-Pro assume_server_dir % tree .</span><br><span class="line">.</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">└── etc</span><br><span class="line">    └── hello-api.yaml</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里的 <code>docker-compose.yml</code> 就不能这样写了，因为这里不是构建，而是拉取，所以指定镜像地址即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">hello-api:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/****/github-actions-test:latest</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./etc:/app/etc</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8888:8888&quot;</span></span><br><span class="line">    <span class="attr">stdin_open:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>之后把本地的容器、镜像全删掉，再运行这个 docker-compose</p><p>发现可以正常拉取镜像并运行</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141733904.png" alt="image-20221214173331865"></p><hr><h1 id="服务器拉取测试">服务器拉取测试</h1><p>好了，下一步就是在服务器上拉取并测试了</p><p>但是有个问题，我用的 M1 的 MacBook ，虽然 docker 是跨平台的，但是我这里构建的镜像是 arm 架构的，服务器上拿到运行会这样</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141530706.png" alt="image-20221214153056667"></p><p>所以我需要使用 <code>docker buildx</code> 重新编译并推送（<a href="https://cloud.tencent.com/developer/article/1543689?fileGuid=0l3NVKX0BgflYN3R">参考文章：跨平台构建 Docker 镜像新姿势，x86、arm 一把梭</a> ）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker buildx create --use --name mybuilder</span><br><span class="line">docker buildx inspect mybuilder --bootstrap</span><br><span class="line">docker buildx ls</span><br><span class="line">docker buildx build -t registry.cn-hangzhou.aliyuncs.com/*****/github-actions-test:latest -f hello/Dockerfile --platform=linux/amd64 . --push</span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141758756.png" alt="image-20221214175803681"></p><p>然后再在服务器拉取运行，但是又遇到了新的问题</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141811962.png" alt="image-20221214181100918"></p><p>然后我去谷歌，算是解决了问题</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141814740.png" alt="image-20221214181431705"></p><p>现在终于跑起来了</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141828018.png" alt="image-20221214182811973"></p><h1 id="GitHub-Actions打包-服务器拉取运行">GitHub Actions打包&amp;服务器拉取运行</h1><p>好了，现在手动把环境都打通了，轮到使用 GitHub Actions 来自动化了</p><p>先来一个只推送到阿里云的版本，测试一下效果</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branch:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">v3</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Docker</span> <span class="string">meta</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">meta</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/metadata-action@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="comment"># list of Docker images to use as base name for tags</span></span><br><span class="line">          <span class="attr">images:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.IMAGE_URL</span> <span class="string">&#125;&#125;</span> <span class="comment"># registry.cn-hangzhou.aliyuncs.com/xxxxx/xxxxx</span></span><br><span class="line">          <span class="comment"># generate Docker tags based on the following events/attributes</span></span><br><span class="line">          <span class="attr">tags:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            type=schedule</span></span><br><span class="line"><span class="string">            type=ref,event=branch</span></span><br><span class="line"><span class="string">            type=ref,event=pr</span></span><br><span class="line"><span class="string">            type=semver,pattern=&#123;&#123;version&#125;&#125;</span></span><br><span class="line"><span class="string">            type=semver,pattern=&#123;&#123;major&#125;&#125;.&#123;&#123;minor&#125;&#125;</span></span><br><span class="line"><span class="string">            type=semver,pattern=&#123;&#123;major&#125;&#125;</span></span><br><span class="line"><span class="string">            type=sha</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">QEMU</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/setup-qemu-action@v1</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">Docker</span> <span class="string">Buildx</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/setup-buildx-action@v1</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Login</span> <span class="string">to</span> <span class="string">Aliyun</span> <span class="string">Registry</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/login-action@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">registry:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ALIYUN_REGISTRY_USERNAME</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ALIYUN_REGISTRY_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">push</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/build-push-action@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">          <span class="attr">file:</span> <span class="string">hello/Dockerfile</span></span><br><span class="line">          <span class="attr">push:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">tags:</span> <span class="string">$&#123;&#123;</span> <span class="string">steps.meta.outputs.tags</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212161437895.png" alt="image-20221216143739869"></p><p>可以看见已经成功推送，就是 tag 打的不是 latest，这个随便了，我们在服务器也改成 v3 的版本就可以了</p><p>现在随便改动一下项目</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *HelloLogic)</span></span> Hello(req *types.Request) (resp *types.Response, err <span class="type">error</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;types.Response&#123;</span><br><span class="line">Message: <span class="string">&quot;If you can see this message, it means that the service is running successfully.&quot;</span>,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后增加重启的命令</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Pull</span> <span class="string">and</span> <span class="string">run</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">appleboy/ssh-action@master</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_HOST</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_USER</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_SECRET</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SSH_PORT</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">script:</span> <span class="string">sudo</span> <span class="string">docker</span> <span class="string">login</span> <span class="string">--username=$&#123;&#123;</span> <span class="string">secrets.ALIYUN_REGISTRY_USERNAME</span> <span class="string">&#125;&#125;</span> <span class="string">-p</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ALIYUN_REGISTRY_PASSWORD</span> <span class="string">&#125;&#125;</span> <span class="string">registry.cn-hangzhou.aliyuncs.com</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">/home/admin/projects/github-actions-test</span> <span class="string">&amp;&amp;</span> <span class="string">docker-compose</span> <span class="string">pull</span> <span class="string">&amp;&amp;</span> <span class="string">docker-compose</span> <span class="string">up</span> <span class="string">-d</span></span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212161515422.png" alt="image-20221216151529383"></p><p>当然啦，除了直接执行命令之外，你还可以使用 <a href="/2022/12/19/%E3%80%8ECI-CD%E3%80%8F%E4%BD%BF%E7%94%A8Webhook%E9%80%9A%E7%9F%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/">webhook</a> 来通知服务器拉取最新镜像</p><p>至此，完成自动化部署</p>]]></content:encoded>
      
      
      <category domain="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/">运维</category>
      
      <category domain="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/CICD/">CICD</category>
      
      
      <category domain="https://www.nickxu.top/tags/GitHub-Actions/">GitHub Actions</category>
      
      <category domain="https://www.nickxu.top/tags/CICD/">CICD</category>
      
      <category domain="https://www.nickxu.top/tags/Docker/">Docker</category>
      
      
      <comments>https://www.nickxu.top/2022/12/14/%E3%80%8ECI-CD%E3%80%8F%E7%BB%93%E5%90%88GitHub-Actions-Docker%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>『Docker』Docker内程序如何访问宿主机的端口</title>
      <link>https://www.nickxu.top/2022/12/13/%E3%80%8EDocker%E3%80%8FDocker%E5%86%85%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%9A%84%E7%AB%AF%E5%8F%A3/</link>
      <guid>https://www.nickxu.top/2022/12/13/%E3%80%8EDocker%E3%80%8FDocker%E5%86%85%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%9A%84%E7%AB%AF%E5%8F%A3/</guid>
      <pubDate>Tue, 13 Dec 2022 15:50:20 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;好家伙，折腾了这个问题折腾了一天，刚才终于搞定了，简直不要太高兴&lt;/p&gt;
&lt;p&gt;事情是这样的，我现在要折腾基于 Docker 的自动化部署，然后我的项目已经打包好了，但是运行起来有问题，一直说连不上 mysql&lt;/p&gt;
&lt;p&gt;然后呢？ &lt;s&gt;就递归折腾（不是）&lt;/s&gt; 我就</description>
        
      
      
      
      <content:encoded><![CDATA[<p>好家伙，折腾了这个问题折腾了一天，刚才终于搞定了，简直不要太高兴</p><p>事情是这样的，我现在要折腾基于 Docker 的自动化部署，然后我的项目已经打包好了，但是运行起来有问题，一直说连不上 mysql</p><p>然后呢？ <s>就递归折腾（不是）</s> 我就感觉肯定是网络的事情</p><p>然后就想是不是要折腾容器间通信，但是把 mysql 跑在 docker 里面肯定有不少损耗吧，问了下助手里面的大佬，结论也是这样</p><p>那么，现在的问题就是，<strong>如何让 Docker内程序如何访问宿主机的端口</strong></p><p>然后我就去搜哇，看各种文章博客去各种平台，还看了些项目，看他们是怎么解决的</p><p>但是助手的项目自然都是读服务器上的配置文件，我也看不见</p><p>去看 docker 相关的教程，但都感觉好像没遇见这个问题一样，提都不提</p><p>去网上查这个问题，有的说就 docker 启动的时候有个网卡，然后直接连它的 ip 就行，但是我没搞定</p><p>有的说启动的时候指定 host 模式，这个在 Linux 上的确可以（当然是后面发现的），但是我在 Mac 上不行，也没报错，就这样又折腾了好久</p><p>然后去翻官方文档这是个什么玩意，然后我就看见了</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212140026968.png" alt="c3ef83a8de294fa7f758b48cf8d399d0"></p><p>没事了，人麻了</p><p>然后我在服务器上尝试，的确这个 host 是可以的，但是我不相信 Windows和Mac就没有好的方法</p><p>最后去谷歌一趟，奶奶的，一分钟搞定</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212132356228.png" alt="image-20221213235613721"></p><p>如图所示，简直不要太简单，直接用 <code>host.docker.internal</code> 即可</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212132357177.png" alt="image-20221213235716153"></p><p>然后看见访问的实际是 <code>192.168.65.2</code> ，我就想到了这篇</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212140033951.png" alt="image-20221214003307913"></p><p>的确，貌似和我的 <code>192.168.65.0 </code>  一个网段，但是并不和它说的一样</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212140034333.png" alt="image-20221214003410287"></p><p>国内什么垃圾互联网啊🤔（迫真</p><blockquote><p>PS：如果遇到这种情况</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212141811962.png" alt="image-20221214181100918"></p><p>请在你的 <code>docker-compose.yml</code> 的服务中加上</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">extra_hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;host.docker.internal:host-gateway&quot;</span></span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">hello-api:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">hello/Dockerfile</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./etc:/app/etc</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8888:8888&quot;</span></span><br><span class="line">    <span class="attr">stdin_open:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">extra_hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;host.docker.internal:host-gateway&quot;</span></span><br></pre></td></tr></table></figure><p>来源：<a href="https://stackoverflow.com/questions/70505750/lookup-host-docker-internal-no-such-host">https://stackoverflow.com/questions/70505750/lookup-host-docker-internal-no-such-host</a></p></blockquote>]]></content:encoded>
      
      
      <category domain="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/">运维</category>
      
      <category domain="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/Docker/">Docker</category>
      
      
      <category domain="https://www.nickxu.top/tags/Docker/">Docker</category>
      
      
      <comments>https://www.nickxu.top/2022/12/13/%E3%80%8EDocker%E3%80%8FDocker%E5%86%85%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%9A%84%E7%AB%AF%E5%8F%A3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>设置在使用 SSH key 时不用再输入密码</title>
      <link>https://www.nickxu.top/2022/12/10/%E8%AE%BE%E7%BD%AE%E5%9C%A8%E4%BD%BF%E7%94%A8-SSH-key-%E6%97%B6%E4%B8%8D%E7%94%A8%E5%86%8D%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81/</link>
      <guid>https://www.nickxu.top/2022/12/10/%E8%AE%BE%E7%BD%AE%E5%9C%A8%E4%BD%BF%E7%94%A8-SSH-key-%E6%97%B6%E4%B8%8D%E7%94%A8%E5%86%8D%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81/</guid>
      <pubDate>Sat, 10 Dec 2022 03:35:29 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;今早发生了非常尴尬的事情，我在群里抱怨怎样才能在 git ssh 的时候不用密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212101156880.png&quot; alt=&quot;cb48d</description>
        
      
      
      
      <content:encoded><![CDATA[<p>今早发生了非常尴尬的事情，我在群里抱怨怎样才能在 git ssh 的时候不用密码</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212101156880.png" alt="cb48d73493389516ba5283292da021da"></p><p>然后群u们居然告诉我：你在生成的时候不输密码就可以了！</p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212101150420.png" alt="E49300B6C2DA5315E198DB90B63517A7" style="zoom:50%;" /><p>好家伙，这么多年每天多输了这么多密码（</p><p>那要怎样重置密码为空呢？使用下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -p -f ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212101155703.png" alt="37a866d23e9e29bac4f0996a31bbe0b3"></p>]]></content:encoded>
      
      
      <category domain="https://www.nickxu.top/categories/%E6%96%B0%E6%8A%80%E8%83%BD-Got/">新技能 Got</category>
      
      
      <category domain="https://www.nickxu.top/tags/SSH/">SSH</category>
      
      
      <comments>https://www.nickxu.top/2022/12/10/%E8%AE%BE%E7%BD%AE%E5%9C%A8%E4%BD%BF%E7%94%A8-SSH-key-%E6%97%B6%E4%B8%8D%E7%94%A8%E5%86%8D%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>『CI/CD』使用GitHub Actions实现简单的自动化部署</title>
      <link>https://www.nickxu.top/2022/12/09/%E4%BD%BF%E7%94%A8GitHub-Actions%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</link>
      <guid>https://www.nickxu.top/2022/12/09/%E4%BD%BF%E7%94%A8GitHub-Actions%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</guid>
      <pubDate>Fri, 09 Dec 2022 12:17:58 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;本篇是一个 GitHub Actions 使用示例，实现在每次提交代码时自动更新你的远端服务器正在运行的项目&lt;/p&gt;
&lt;p&gt;但是我并不会从头开始向你介绍 GitHub Actions 是什么，而要求你事先对它有所了解&lt;/p&gt;
&lt;p&gt;你可以去看官方文档，去 B 站找视频看，网</description>
        
      
      
      
      <content:encoded><![CDATA[<p>本篇是一个 GitHub Actions 使用示例，实现在每次提交代码时自动更新你的远端服务器正在运行的项目</p><p>但是我并不会从头开始向你介绍 GitHub Actions 是什么，而要求你事先对它有所了解</p><p>你可以去看官方文档，去 B 站找视频看，网上有很多高质量的参考资料</p><p>简单地说就是 GitHub 可以在你更新代码或合并分支的时候开一个虚拟机帮你完成一些事情</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212092139233.jpg" alt="a054159e939a43e3ab5ff2406081ed6d"></p><blockquote><p>又或者，你也可以去问 ChatGPT，哈哈😄</p></blockquote><p>那为什么说是“简单的”呢？因为本篇只会举一个很简单的例子，不会涉及 docker ，也没有 k3s 集群</p><p>本篇的例子可以在我的仓库找到：<a href="https://github.com/NX-Official/github-actions-test">https://github.com/NX-Official/github-actions-test</a></p><p>为了将重点放在部署上，我以下面的 <code>main.go</code> 为例，它只显示一个简单的 <code>hello world</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">   r := gin.Default()</span><br><span class="line"></span><br><span class="line">   r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">      c.String(<span class="number">200</span>, <span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line">   r.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前的项目结构如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./</span><br><span class="line">├── go.mod</span><br><span class="line">├── go.sum</span><br><span class="line">└── main.go</span><br></pre></td></tr></table></figure><hr><h1 id="我该如何部署？">我该如何部署？</h1><p>现在来思考一个问题，我该部署到远程服务器</p><p>看了一圈助手里面的项目，大概有两种方案：</p><ol><li>不在虚拟机上编译，直接 ssh 连接服务器，执行命令或一个脚本文件来自动拉取最新代码，编译文件并完成替换</li><li>直接在 GitHub 的虚拟机上完成编译，得到二进制文件，然后把文件送到我们的服务器上（直接转送可能很慢，我看有的项目是先放到 OSS 上，然后用一个 webhook 通知守护进程，去拉取文件并完成替换）</li></ol><p>我两种都会演示一下，先来第一种，使用 ssh 直接连接服务器，并执行下面的步骤：</p><ul><li><p>使用 <code>git pull</code> 拉取最新代码</p></li><li><p>运行一个自动编译与重新启动的脚本</p></li></ul><hr><h1 id="服务器端的准备">服务器端的准备</h1><p>现在来动手实践，首先我们先将项目克隆下来（这里当然是我自己的项目）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/NX-Official/github-actions-test.git</span><br></pre></td></tr></table></figure><p>然后尝试编译并执行（当然啦，你要先安装 golang）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> github-actions-test</span><br><span class="line">go mod tidy</span><br><span class="line">go build main.go</span><br><span class="line">./main</span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212092207341.png" alt=""></p><p>看来是没问题的</p><p>现在，为了更方便地运行项目，我们可以将我们的程序注册为一个服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/systemd/system/</span><br><span class="line">nano github-actions-test.service</span><br></pre></td></tr></table></figure><p>然后写入下面的代码（你需要根据自己的项目来修改名称与路径）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=github-actions-test</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/root/github-actions-test/main</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>然后使用下面的命令运行与查询状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start github-actions-test</span><br><span class="line">systemctl status github-actions-tes</span><br></pre></td></tr></table></figure><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212092224357.png" alt="image-20221209222401325"></p><p>没有问题，继续下面的步骤</p><hr><h1 id="定义-Actions-secrets">定义 Actions secrets</h1><p>要连接到服务器，必定需要用户名和密码（当然你也可以使用私钥之类的，但这里为了简单我就使用密码）</p><p>但是密码这种东西你肯定不能直接写在 <code>build.yml</code> 中，你肯定不想让别人翻你的项目的时候翻到你服务器的密码吧～</p><p>所以 GitHub 就有了 Actions secrets 这个东西，你可以在这里定义运行时的环境变量，并只有项目参与者才能修改</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212092241016.png" alt="image-20221209224126982"></p><p>在这里定义好三个变量，就可以在下面的脚本中使用了</p><hr><h1 id="编写脚本">编写脚本</h1><p>为了方便，现在来为这个项目写一个重启服务的脚本，保存为 <code>run.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">serviceName=<span class="string">&quot;github-actions-test&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">systemctl stop <span class="variable">$serviceName</span></span><br><span class="line"><span class="built_in">rm</span> main -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新编译</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/go/bin</span><br><span class="line">go mod tidy</span><br><span class="line">go build main.go</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl start <span class="variable">$serviceName</span></span><br><span class="line">systemctl status <span class="variable">$serviceName</span></span><br></pre></td></tr></table></figure><p>现在在项目中创建 <code>.github/workflow</code> 目录 ，再在里面建一个 <code>build.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">直接在服务器执行命令</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">appleboy/ssh-action@master</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">host:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_HOST</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_USER</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_SECRET</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">script:</span> <span class="string">cd</span> <span class="string">~/github-actions-test</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">pull</span> <span class="string">&amp;&amp;</span> <span class="string">bash</span> <span class="string">run.sh</span></span><br></pre></td></tr></table></figure><p>这意味着将在 <code>push</code> 到 <code>main</code> 分支的时候，自动连接服务器并执行最下面的命令</p><p>现在来对 <code>main.go</code> 做一些修改，测试一下自动化部署对效果</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;Hello World, I&#x27;m a Gin server&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>然后提交并推送，观察发现脚本已经成功运行</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212092308844.png" alt="image-20221209230812804"></p><p>刷新页面，看见已经成功重新编译并启动服务</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212092308742.png" alt="image-20221209230856708"></p><hr><h1 id="另一种方案">另一种方案</h1><p>下面来试一下另一种方案，为了区分开来，我新建了一个 <code>v2</code> 分支</p><p>然后修改脚本</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branch:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">v2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Golang</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-go@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">go-version:</span> <span class="string">&#x27;1.19&#x27;</span></span><br><span class="line">          <span class="attr">cache:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">go</span> <span class="string">build</span> <span class="string">main.go</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">SSH_USERNAME:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_USER</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">SSH_PASSWORD:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_SECRET</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">SSH_PORT:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SSH_PORT</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">DEPLOY_HOST:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_HOST</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">DEPLOY_PATH:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_PATH</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          # Stop the service</span></span><br><span class="line"><span class="string">          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$DEPLOY_HOST -p $SSH_PORT &quot;systemctl stop github-actions-test &amp;&amp; rm -rf $DEPLOY_PATH/main&quot;</span></span><br><span class="line"><span class="string"></span>          </span><br><span class="line">          <span class="comment"># Copy the binary to the remote server</span></span><br><span class="line">          <span class="string">sshpass</span> <span class="string">-p</span> <span class="string">$SSH_PASSWORD</span> <span class="string">scp</span> <span class="string">-r</span> <span class="string">-o</span> <span class="string">StrictHostKeyChecking=no</span> <span class="string">-P</span> <span class="number">47</span> <span class="string">main</span> <span class="string">root@www.nickxu.top:/root/github-actions-test</span></span><br><span class="line">          </span><br><span class="line">          <span class="comment"># Restart the service on the remote server</span></span><br><span class="line">          <span class="string">sshpass</span> <span class="string">-p</span> <span class="string">$SSH_PASSWORD</span> <span class="string">ssh</span> <span class="string">-o</span> <span class="string">StrictHostKeyChecking=no</span> <span class="string">$SSH_USERNAME@$DEPLOY_HOST</span> <span class="string">-p</span> <span class="string">$SSH_PORT</span> <span class="string">&quot;systemctl start github-actions-test&quot;</span></span><br></pre></td></tr></table></figure><p><code>Checkout</code> 指的是拉取你的代码，然后后面设置 go 版本，编译，部署</p><p>同时修改一下 <code>main.go</code> ，这样可以对比出不同</p><p>然后提交，看看结果</p><p><img src="https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212102317802.png" alt="image-20221210231722735"></p><p>十分顺利</p><p>这里我的例子是将编译和部署写在一个文件中的，其实你可以拆分成两个，这样更加规整，这个就留给你来折腾了😄</p>]]></content:encoded>
      
      
      <category domain="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/">运维</category>
      
      <category domain="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/CICD/">CICD</category>
      
      
      <category domain="https://www.nickxu.top/tags/GitHub-Actions/">GitHub Actions</category>
      
      <category domain="https://www.nickxu.top/tags/CICD/">CICD</category>
      
      
      <comments>https://www.nickxu.top/2022/12/09/%E4%BD%BF%E7%94%A8GitHub-Actions%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
