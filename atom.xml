<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NX の 博客</title>
  
  
  <link href="https://www.nickxu.top/atom.xml" rel="self"/>
  
  <link href="https://www.nickxu.top/"/>
  <updated>2023-03-02T15:14:44.349Z</updated>
  <id>https://www.nickxu.top/</id>
  
  <author>
    <name>Nick Xu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>写在大二下开学之初</title>
    <link href="https://www.nickxu.top/2023/03/01/%E5%86%99%E5%9C%A8%E5%A4%A7%E4%BA%8C%E5%BC%80%E5%AD%A6%E4%B9%8B%E5%88%9D/"/>
    <id>https://www.nickxu.top/2023/03/01/%E5%86%99%E5%9C%A8%E5%A4%A7%E4%BA%8C%E5%BC%80%E5%AD%A6%E4%B9%8B%E5%88%9D/</id>
    <published>2023-03-01T13:30:14.000Z</published>
    <updated>2023-03-02T15:14:44.349Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;如你所见，我已经两个多月没有更新博客了，现在开学了，总得恢复更新节奏吧（&lt;/p&gt;
&lt;p&gt;最近很乱，就随便写写寒假到现在发生的事吧，想到哪里写到哪里&lt;/p&gt;
&lt;h2 id=&quot;手搓学习通&quot;&gt;手搓学习通&lt;/h2&gt;
&lt;p&gt;如果你要问我我寒假这两个月干什么去了，我会和你说，我一个人折腾完了两个项目&lt;/p&gt;
&lt;p&gt;一个是文艺数法学院的一个产品包装教学系统的后端，一个是青训营的项目，先说第一个&lt;/p&gt;
&lt;p&gt;这个项目是上个学期杭助群里看见的，缺后端的人，然后我就进了&lt;/p&gt;
&lt;p&gt;进了之后发现两个前端，就我一个后端（乐&lt;/p&gt;
&lt;p&gt;我为什么想参加呢？第一个自然是有💰（三个人分了大几千块），第二个是想熟悉一下 &lt;code&gt;go-zero&lt;/code&gt; 框架，第三个也是想丰富一下简历&lt;/p&gt;
&lt;p&gt;对后端来说，我需要完成以下功能：班级系统，然后可以布置作业，学生相互批改作业，有班级云盘放资料，有教学视频给学生看…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202303012225538.png&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ChatGPT对话记录（三）：GORM的行级锁</title>
    <link href="https://www.nickxu.top/2023/02/19/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9AGORM%E7%9A%84%E8%A1%8C%E7%BA%A7%E9%94%81/"/>
    <id>https://www.nickxu.top/2023/02/19/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9AGORM%E7%9A%84%E8%A1%8C%E7%BA%A7%E9%94%81/</id>
    <published>2023-02-18T16:14:50.000Z</published>
    <updated>2023-02-18T16:17:57.875Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;你知不知道gorm的Clauses方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;是的，我知道gorm的Clauses方法。在GORM中，Clauses方法是用于在查询语句中添加子句的函数。它允许您使用原始的SQL语句或GORM的构建器函数来添加子句。&lt;/p&gt;
&lt;p&gt;Clauses方法返回的是*DB对象，您可以在此对象上继续调用其他GORM函数，例如Where、Order、Limit等，以构建完整的查询语句。Clauses方法的语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db&lt;span</summary>
        
      
    
    
    
    <category term="ChatGPT 对话记录" scheme="https://www.nickxu.top/categories/ChatGPT-%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="ChatGPT" scheme="https://www.nickxu.top/tags/ChatGPT/"/>
    
    <category term="GORM" scheme="https://www.nickxu.top/tags/GORM/"/>
    
    <category term="Go" scheme="https://www.nickxu.top/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>ChatGPT对话记录（二）：使用apt完全删除软件包</title>
    <link href="https://www.nickxu.top/2023/02/17/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BD%BF%E7%94%A8apt%E5%AE%8C%E5%85%A8%E5%88%A0%E9%99%A4%E8%BD%AF%E4%BB%B6%E5%8C%85/"/>
    <id>https://www.nickxu.top/2023/02/17/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BD%BF%E7%94%A8apt%E5%AE%8C%E5%85%A8%E5%88%A0%E9%99%A4%E8%BD%AF%E4%BB%B6%E5%8C%85/</id>
    <published>2023-02-17T11:21:50.000Z</published>
    <updated>2023-02-18T16:16:38.112Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我如何使用apt完全删除软件包，连配置文件也一起删的那种&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;要使用apt命令完全删除软件包以及其相关的配置文件，可以使用&lt;code&gt;purge&lt;/code&gt;选项。以下是具体的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开终端，使用root权限或sudo权限登录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行以下命令以卸载软件包及其配置文件：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt purge 软件包名称&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将&lt;code&gt;软件包名称&lt;/code&gt;替换为要删除的软件包的名称。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在确认提示中，输入&lt;code&gt;Y&lt;/code&gt;以确认卸载操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果您还想删除软件包相关的依赖项，可以使用&lt;code&gt;autoremove&lt;/code&gt;命令。运行以下命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt</summary>
        
      
    
    
    
    <category term="ChatGPT 对话记录" scheme="https://www.nickxu.top/categories/ChatGPT-%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="ChatGPT" scheme="https://www.nickxu.top/tags/ChatGPT/"/>
    
    <category term="Linux" scheme="https://www.nickxu.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>ChatGPT对话记录（一）：通过SSH密钥进行身份验证</title>
    <link href="https://www.nickxu.top/2023/02/17/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%80%9A%E8%BF%87SSH%E5%AF%86%E9%92%A5%E8%BF%9B%E8%A1%8C%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/"/>
    <id>https://www.nickxu.top/2023/02/17/ChatGPT%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%80%9A%E8%BF%87SSH%E5%AF%86%E9%92%A5%E8%BF%9B%E8%A1%8C%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/</id>
    <published>2023-02-16T16:54:10.000Z</published>
    <updated>2023-02-18T16:17:49.817Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;如何将公钥添加到 ~/.ssh/authorized_keys 中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;要将公钥添加到&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;文件中，可以按照以下步骤操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;将公钥复制到本地计算机的剪贴板中。可以使用以下命令从远程计算机获取公钥：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh user@remote_host &lt;span class=&quot;string&quot;&gt;&amp;quot;cat</summary>
        
      
    
    
    
    <category term="ChatGPT 对话记录" scheme="https://www.nickxu.top/categories/ChatGPT-%E5%AF%B9%E8%AF%9D%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="ChatGPT" scheme="https://www.nickxu.top/tags/ChatGPT/"/>
    
    <category term="Linux" scheme="https://www.nickxu.top/tags/Linux/"/>
    
    <category term="SSH" scheme="https://www.nickxu.top/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>第五届字节跳动青训营项目会议纪要</title>
    <link href="https://www.nickxu.top/2023/01/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E4%BC%9A%E8%AE%AE%E7%BA%AA%E8%A6%81/"/>
    <id>https://www.nickxu.top/2023/01/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E4%BC%9A%E8%AE%AE%E7%BA%AA%E8%A6%81/</id>
    <published>2023-01-13T11:55:35.000Z</published>
    <updated>2023-01-13T11:56:19.132Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;明确目标&quot;&gt;明确目标&lt;/h1&gt;
&lt;h2 id=&quot;项目质量&quot;&gt;项目质量&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202301131955844.png&quot; alt=&quot;image-20230113125129881&quot;&gt;&lt;/p&gt;
&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202301131955948.png&quot; alt=&quot;image-20230113130844275&quot;  /&gt;
&lt;blockquote&gt;
&lt;p&gt;我们的目标是一等奖，重振h68u荣光&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有第三届的项目可供参考：&lt;a href=&quot;https://github.com/h68u/h68u-tiktok-app&quot;&gt;https://github.com/h68u/h68u-tiktok-app&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;DDL&quot;&gt;DDL&lt;/h2&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>『CI/CD』使用Webhook通知服务器</title>
    <link href="https://www.nickxu.top/2022/12/19/%E3%80%8ECI-CD%E3%80%8F%E4%BD%BF%E7%94%A8Webhook%E9%80%9A%E7%9F%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://www.nickxu.top/2022/12/19/%E3%80%8ECI-CD%E3%80%8F%E4%BD%BF%E7%94%A8Webhook%E9%80%9A%E7%9F%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2022-12-19T13:50:41.000Z</published>
    <updated>2023-01-29T07:12:17.564Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在前面的 Github Actions 工作流中，我们最后都是直接使用 SSH 连接在服务器上执行命令，但是这样很不优雅，而且会被认为是服务器被异常登录&lt;/p&gt;
&lt;p&gt;所以可以尝试使用 webhook&lt;/p&gt;
&lt;p&gt;简单地说，就是先在服务器准备一个部署脚本，然后一直运行一个守护进程监听请求，触发 GitHub Actions 时发送请求，守护进程被收到后自动执行部署脚本&lt;/p&gt;
&lt;h1 id=&quot;准备部署脚本&quot;&gt;准备部署脚本&lt;/h1&gt;
&lt;p&gt;准备 &lt;code&gt;redeploy.sh&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="运维" scheme="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="CICD" scheme="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/CICD/"/>
    
    
    <category term="GitHub Actions" scheme="https://www.nickxu.top/tags/GitHub-Actions/"/>
    
    <category term="CICD" scheme="https://www.nickxu.top/tags/CICD/"/>
    
    <category term="Webhook" scheme="https://www.nickxu.top/tags/Webhook/"/>
    
  </entry>
  
  <entry>
    <title>『CI/CD』结合GitHub Actions+Docker实现自动化部署</title>
    <link href="https://www.nickxu.top/2022/12/14/%E3%80%8ECI-CD%E3%80%8F%E7%BB%93%E5%90%88GitHub-Actions-Docker%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.nickxu.top/2022/12/14/%E3%80%8ECI-CD%E3%80%8F%E7%BB%93%E5%90%88GitHub-Actions-Docker%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</id>
    <published>2022-12-14T07:42:48.000Z</published>
    <updated>2023-01-04T11:28:33.319Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;上一篇 &lt;a href=&quot;/2022/12/09/%E4%BD%BF%E7%94%A8GitHub-Actions%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/&quot;&gt;『CI/CD』使用GitHub Actions实现简单的自动化部署 &lt;/a&gt; 中实现了简单的自动化部署，本篇来介绍一下使用 docker 的做法 （NX 整整折腾了两天呢）&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;基本流程&quot;&gt;基本流程&lt;/h1&gt;
&lt;p&gt;首先要明确一下最终的运行流程，一共有4个步骤&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;更新代码，提交至GitHub&lt;/li&gt;
&lt;li&gt;GitHub 触发 Actions，自动 build 镜像，并推送至镜像仓库&lt;/li&gt;
&lt;li&gt;服务器拉取最新镜像&lt;/li&gt;
&lt;li&gt;重新启动容器&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因为今天时间有点紧我就不画图了（明天赶回家，要收拾东西）&lt;/p&gt;
&lt;hr&gt;
&lt;h1</summary>
        
      
    
    
    
    <category term="运维" scheme="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="CICD" scheme="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/CICD/"/>
    
    
    <category term="GitHub Actions" scheme="https://www.nickxu.top/tags/GitHub-Actions/"/>
    
    <category term="CICD" scheme="https://www.nickxu.top/tags/CICD/"/>
    
    <category term="Docker" scheme="https://www.nickxu.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>『Docker』Docker内程序如何访问宿主机的端口</title>
    <link href="https://www.nickxu.top/2022/12/13/%E3%80%8EDocker%E3%80%8FDocker%E5%86%85%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%9A%84%E7%AB%AF%E5%8F%A3/"/>
    <id>https://www.nickxu.top/2022/12/13/%E3%80%8EDocker%E3%80%8FDocker%E5%86%85%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%9A%84%E7%AB%AF%E5%8F%A3/</id>
    <published>2022-12-13T15:50:20.000Z</published>
    <updated>2022-12-14T10:34:54.759Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;好家伙，折腾了这个问题折腾了一天，刚才终于搞定了，简直不要太高兴&lt;/p&gt;
&lt;p&gt;事情是这样的，我现在要折腾基于 Docker 的自动化部署，然后我的项目已经打包好了，但是运行起来有问题，一直说连不上 mysql&lt;/p&gt;
&lt;p&gt;然后呢？ &lt;s&gt;就递归折腾（不是）&lt;/s&gt; 我就感觉肯定是网络的事情&lt;/p&gt;
&lt;p&gt;然后就想是不是要折腾容器间通信，但是把 mysql 跑在 docker 里面肯定有不少损耗吧，问了下助手里面的大佬，结论也是这样&lt;/p&gt;
&lt;p&gt;那么，现在的问题就是，&lt;strong&gt;如何让 Docker内程序如何访问宿主机的端口&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后我就去搜哇，看各种文章博客去各种平台，还看了些项目，看他们是怎么解决的&lt;/p&gt;
&lt;p&gt;但是助手的项目自然都是读服务器上的配置文件，我也看不见&lt;/p&gt;
&lt;p&gt;去看 docker 相关的教程，但都感觉好像没遇见这个问题一样，提都不提&lt;/p&gt;
&lt;p&gt;去网上查这个问题，有的说就 docker 启动的时候有个网卡，然后直接连它的 ip 就行，但是我没搞定&lt;/p&gt;
&lt;p&gt;有的说启动的时候指定 host 模式，这个在</summary>
        
      
    
    
    
    <category term="运维" scheme="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="Docker" scheme="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/Docker/"/>
    
    
    <category term="Docker" scheme="https://www.nickxu.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>设置在使用 SSH key 时不用再输入密码</title>
    <link href="https://www.nickxu.top/2022/12/10/%E8%AE%BE%E7%BD%AE%E5%9C%A8%E4%BD%BF%E7%94%A8-SSH-key-%E6%97%B6%E4%B8%8D%E7%94%A8%E5%86%8D%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81/"/>
    <id>https://www.nickxu.top/2022/12/10/%E8%AE%BE%E7%BD%AE%E5%9C%A8%E4%BD%BF%E7%94%A8-SSH-key-%E6%97%B6%E4%B8%8D%E7%94%A8%E5%86%8D%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81/</id>
    <published>2022-12-10T03:35:29.000Z</published>
    <updated>2023-02-18T16:18:45.589Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;今早发生了非常尴尬的事情，我在群里抱怨怎样才能在 git ssh 的时候不用密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212101156880.png&quot; alt=&quot;cb48d73493389516ba5283292da021da&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后群u们居然告诉我：你在生成的时候不输密码就可以了！&lt;/p&gt;
&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212101150420.png&quot; alt=&quot;E49300B6C2DA5315E198DB90B63517A7&quot; style=&quot;zoom:50%;&quot; /&gt;
&lt;p&gt;好家伙，这么多年每天多输了这么多密码（&lt;/p&gt;
&lt;p&gt;那要怎样重置密码为空呢？使用下面的命令&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="新技能 Got" scheme="https://www.nickxu.top/categories/%E6%96%B0%E6%8A%80%E8%83%BD-Got/"/>
    
    
    <category term="SSH" scheme="https://www.nickxu.top/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>『CI/CD』使用GitHub Actions实现简单的自动化部署</title>
    <link href="https://www.nickxu.top/2022/12/09/%E4%BD%BF%E7%94%A8GitHub-Actions%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.nickxu.top/2022/12/09/%E4%BD%BF%E7%94%A8GitHub-Actions%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</id>
    <published>2022-12-09T12:17:58.000Z</published>
    <updated>2022-12-14T07:38:08.435Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇是一个 GitHub Actions 使用示例，实现在每次提交代码时自动更新你的远端服务器正在运行的项目&lt;/p&gt;
&lt;p&gt;但是我并不会从头开始向你介绍 GitHub Actions 是什么，而要求你事先对它有所了解&lt;/p&gt;
&lt;p&gt;你可以去看官方文档，去 B 站找视频看，网上有很多高质量的参考资料&lt;/p&gt;
&lt;p&gt;简单地说就是 GitHub 可以在你更新代码或合并分支的时候开一个虚拟机帮你完成一些事情&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202212092139233.jpg&quot; alt=&quot;a054159e939a43e3ab5ff2406081ed6d&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;又或者，你也可以去问 ChatGPT，哈哈😄&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那为什么说是“简单的”呢？因为本篇只会举一个很简单的例子，不会涉及 docker ，也没有 k3s 集群&lt;/p&gt;
&lt;p&gt;本篇的例子可以在我的仓库找到：&lt;a</summary>
        
      
    
    
    
    <category term="运维" scheme="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="CICD" scheme="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/CICD/"/>
    
    
    <category term="GitHub Actions" scheme="https://www.nickxu.top/tags/GitHub-Actions/"/>
    
    <category term="CICD" scheme="https://www.nickxu.top/tags/CICD/"/>
    
  </entry>
  
  <entry>
    <title>『C/C++』一文初识Makefile与CMake</title>
    <link href="https://www.nickxu.top/2022/12/01/%E3%80%8EC-C-%E3%80%8F%E4%B8%80%E6%96%87%E5%88%9D%E8%AF%86Makefile%E4%B8%8ECMake/"/>
    <id>https://www.nickxu.top/2022/12/01/%E3%80%8EC-C-%E3%80%8F%E4%B8%80%E6%96%87%E5%88%9D%E8%AF%86Makefile%E4%B8%8ECMake/</id>
    <published>2022-12-01T02:12:51.000Z</published>
    <updated>2022-12-08T01:17:51.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文来源于 B 站视频，鄙人只是跟着做一下笔记：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV188411L7d2/?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click&amp;amp;vd_source=e2613baf768b2432fcb2b9edd79c0c68&quot;&gt;Makefile 20分钟入门，简简单单，展示如何使用Makefile管理和编译C++代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1bg411p7oS/?spm_id_from=333.788.recommend_more_video.-1&amp;amp;vd_source=e2613baf768b2432fcb2b9edd79c0c68&quot;&gt;CMake 6分钟入门，不用再写复杂的Makefile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感觉这个老师讲的真的好</summary>
        
      
    
    
    
    <category term="Golang" scheme="https://www.nickxu.top/categories/Golang/"/>
    
    <category term="语法速通" scheme="https://www.nickxu.top/categories/Golang/%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A/"/>
    
    
    <category term="C/C++" scheme="https://www.nickxu.top/tags/C-C/"/>
    
    <category term="Makefile" scheme="https://www.nickxu.top/tags/Makefile/"/>
    
    <category term="CMake" scheme="https://www.nickxu.top/tags/CMake/"/>
    
  </entry>
  
  <entry>
    <title>Golang 语法速通指南（十）函数之进阶使用</title>
    <link href="https://www.nickxu.top/2022/11/23/Golang-%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97%EF%BC%88%E5%8D%81%EF%BC%89%E5%87%BD%E6%95%B0%E4%B9%8B%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.nickxu.top/2022/11/23/Golang-%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97%EF%BC%88%E5%8D%81%EF%BC%89%E5%87%BD%E6%95%B0%E4%B9%8B%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8/</id>
    <published>2022-11-23T08:17:58.000Z</published>
    <updated>2022-11-23T08:18:44.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;函数进阶一点的使用，就是将函数当作一个变量&lt;/p&gt;
&lt;h2 id=&quot;函数类型&quot;&gt;函数类型&lt;/h2&gt;
&lt;p&gt;若要将函数作为变量，那自然是有类型的&lt;/p&gt;
&lt;p&gt;那函数的类型是怎样的呢？一个函数的类型就是它的签名（名称、入参列表、出参列表）&lt;/p&gt;
&lt;p&gt;签名一样的函数，类型就一样&lt;/p&gt;
&lt;p&gt;例如定义一个 add 函数，然后打印它的类型&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="Golang" scheme="https://www.nickxu.top/categories/Golang/"/>
    
    <category term="语法速通" scheme="https://www.nickxu.top/categories/Golang/%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A/"/>
    
    
    <category term="Go" scheme="https://www.nickxu.top/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>『Go』使用 grpc 时传递错误的一种方法</title>
    <link href="https://www.nickxu.top/2022/11/20/%E3%80%8EGo%E3%80%8F%E4%BD%BF%E7%94%A8-grpc-%E6%97%B6%E4%BC%A0%E9%80%92%E9%94%99%E8%AF%AF%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://www.nickxu.top/2022/11/20/%E3%80%8EGo%E3%80%8F%E4%BD%BF%E7%94%A8-grpc-%E6%97%B6%E4%BC%A0%E9%80%92%E9%94%99%E8%AF%AF%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/</id>
    <published>2022-11-20T04:03:46.000Z</published>
    <updated>2022-11-20T04:24:47.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;折腾了一天，算是找到了一种解决方法&lt;/p&gt;
&lt;p&gt;就是我现在需要在调用 rpc 时传递全局错误，我定义的全局错误如下&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="Golang" scheme="https://www.nickxu.top/categories/Golang/"/>
    
    <category term="go-zero 框架" scheme="https://www.nickxu.top/categories/Golang/go-zero-%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="Go" scheme="https://www.nickxu.top/tags/Go/"/>
    
    <category term="grpc" scheme="https://www.nickxu.top/tags/grpc/"/>
    
    <category term="go-zero" scheme="https://www.nickxu.top/tags/go-zero/"/>
    
  </entry>
  
  <entry>
    <title>『k8s』创建dashboard访问token</title>
    <link href="https://www.nickxu.top/2022/11/18/%E3%80%8Ek8s%E3%80%8F%E5%88%9B%E5%BB%BAdashboard%E8%AE%BF%E9%97%AEtoken/"/>
    <id>https://www.nickxu.top/2022/11/18/%E3%80%8Ek8s%E3%80%8F%E5%88%9B%E5%BB%BAdashboard%E8%AE%BF%E9%97%AEtoken/</id>
    <published>2022-11-18T12:36:13.000Z</published>
    <updated>2022-11-18T12:55:28.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前几天老王八蛋给了我杭助服务器的权限，让我一睹部署的细节&lt;/p&gt;
&lt;p&gt;然后本菜鸡还没接触 k8s ，先把生成 dashboard token 的命令记一下（&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;k3s kubectl -n kubernetes-dashboard create token</summary>
        
      
    
    
    
    
    <category term="k8s" scheme="https://www.nickxu.top/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>Golang 语法速通指南（九）函数之基础使用</title>
    <link href="https://www.nickxu.top/2022/11/14/Golang-%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97%EF%BC%88%E4%B9%9D%EF%BC%89%E5%87%BD%E6%95%B0/"/>
    <id>https://www.nickxu.top/2022/11/14/Golang-%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97%EF%BC%88%E4%B9%9D%EF%BC%89%E5%87%BD%E6%95%B0/</id>
    <published>2022-11-14T12:15:33.000Z</published>
    <updated>2022-11-14T15:11:07.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Go 中的函数基本可分为普通函数、匿名函数和方法，方法可视为绑定在结构体上的函数，将在之后单独讲解&lt;/p&gt;
&lt;h1 id=&quot;普通函数的声明&quot;&gt;普通函数的声明&lt;/h1&gt;
&lt;p&gt;函数声明包括函数名，参数（入参，形参，随你怎么叫）列表，返回值（出参）列表以及函数体&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; 函数名&lt;span class=&quot;params&quot;&gt;([入参列表])&lt;/span&gt;&lt;/span&gt; [返回值列表] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="Golang" scheme="https://www.nickxu.top/categories/Golang/"/>
    
    <category term="语法速通" scheme="https://www.nickxu.top/categories/Golang/%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A/"/>
    
    
    <category term="Go" scheme="https://www.nickxu.top/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>『Go』记录一种处理大文件上传的可行方案：tus 协议</title>
    <link href="https://www.nickxu.top/2022/11/11/%E3%80%8EGo%E3%80%8F%E5%88%86%E4%BA%AB%E4%B8%80%E7%A7%8D%E5%A4%84%E7%90%86%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%9A%84%E5%8F%AF%E8%A1%8C%E6%96%B9%E6%A1%88/"/>
    <id>https://www.nickxu.top/2022/11/11/%E3%80%8EGo%E3%80%8F%E5%88%86%E4%BA%AB%E4%B8%80%E7%A7%8D%E5%A4%84%E7%90%86%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%9A%84%E5%8F%AF%E8%A1%8C%E6%96%B9%E6%A1%88/</id>
    <published>2022-11-11T04:11:41.000Z</published>
    <updated>2022-11-12T02:32:58.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;由于项目业务需要，我需要处理一些大文件的上传（比如说几百MB的视频）&lt;/p&gt;
&lt;p&gt;然后在网上搜了一通之后是，发现都是一些零散的实现&lt;/p&gt;
&lt;p&gt;但是我感觉这种东西一定是有人造过轮子的，于是我就到 GitHub 上搜索相关的包&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202211112154678.png&quot; alt=&quot;image-20221111215420536&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后就发现了 &lt;code&gt;tus&lt;/code&gt; 这个项目&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic-go-img.oss-cn-hangzhou.aliyuncs.com/202211112156068.png&quot; alt=&quot;image-20221111215604945&quot;&gt;&lt;/p&gt;
&lt;p&gt;打开官网，我发现这是一个基于 HTTP 的开源协议（有 &lt;a href=&quot;https://tus.io/demo.html&quot;&gt;在线 Demo&lt;/a&gt; ，感觉挺不错的），还有官方的 Go 实现</summary>
        
      
    
    
    
    <category term="Go" scheme="https://www.nickxu.top/categories/Go/"/>
    
    
    <category term="tus" scheme="https://www.nickxu.top/tags/tus/"/>
    
  </entry>
  
  <entry>
    <title>新人如何参加面试系统后端讲解留档</title>
    <link href="https://www.nickxu.top/2022/11/09/%E6%96%B0%E4%BA%BA%E5%A6%82%E4%BD%95%E5%8F%82%E5%8A%A0%E9%9D%A2%E8%AF%95%E7%B3%BB%E7%BB%9F%E5%90%8E%E7%AB%AF%E8%AE%B2%E8%A7%A3%E7%95%99%E6%A1%A3/"/>
    <id>https://www.nickxu.top/2022/11/09/%E6%96%B0%E4%BA%BA%E5%A6%82%E4%BD%95%E5%8F%82%E5%8A%A0%E9%9D%A2%E8%AF%95%E7%B3%BB%E7%BB%9F%E5%90%8E%E7%AB%AF%E8%AE%B2%E8%A7%A3%E7%95%99%E6%A1%A3/</id>
    <published>2022-11-09T02:16:13.000Z</published>
    <updated>2022-11-09T02:17:17.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前几天讲的，BB了一个小时&lt;/p&gt;
&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Golang 语法速通指南（八）复合数据结构之结构体</title>
    <link href="https://www.nickxu.top/2022/11/08/Golang-%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97%EF%BC%88%E5%85%AB%EF%BC%89%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    <id>https://www.nickxu.top/2022/11/08/Golang-%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97%EF%BC%88%E5%85%AB%EF%BC%89%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BB%93%E6%9E%84%E4%BD%93/</id>
    <published>2022-11-08T12:14:54.000Z</published>
    <updated>2022-11-10T10:44:24.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;创建结构体&quot;&gt;创建结构体&lt;/h1&gt;
&lt;h2 id=&quot;var&quot;&gt;var&lt;/h2&gt;
&lt;p&gt;Golang 中的结构体和 C++ 中的差别不大，下面是一个例子&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="Golang" scheme="https://www.nickxu.top/categories/Golang/"/>
    
    <category term="语法速通" scheme="https://www.nickxu.top/categories/Golang/%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A/"/>
    
    
    <category term="Go" scheme="https://www.nickxu.top/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Golang 语法速通指南（七）复合数据结构之 Map</title>
    <link href="https://www.nickxu.top/2022/11/07/Golang-%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97%EF%BC%88%E4%B8%83%EF%BC%89%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B-Map/"/>
    <id>https://www.nickxu.top/2022/11/07/Golang-%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97%EF%BC%88%E4%B8%83%EF%BC%89%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B-Map/</id>
    <published>2022-11-07T12:14:42.000Z</published>
    <updated>2022-11-07T02:40:39.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;用过 C++ 的 STL 的人肯定见过 Map，或者说这东西相当于 Python 中的字典&lt;/p&gt;
&lt;p&gt;简单地说，就是用来存储键值对的结构，键（key）必须是可比较类型，而值（value）可以是任意类型&lt;/p&gt;
&lt;h1 id=&quot;创建-Map&quot;&gt;创建 Map&lt;/h1&gt;
&lt;h2 id=&quot;var&quot;&gt;var&lt;/h2&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m &lt;span class=&quot;keyword&quot;&gt;map&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;string&lt;/span&gt;]&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="Golang" scheme="https://www.nickxu.top/categories/Golang/"/>
    
    <category term="语法速通" scheme="https://www.nickxu.top/categories/Golang/%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A/"/>
    
    
    <category term="Go" scheme="https://www.nickxu.top/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Golang 语法速通指南（六）复合数据结构之切片（Slice)</title>
    <link href="https://www.nickxu.top/2022/11/06/Golang-%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97%EF%BC%88%E5%85%AD%EF%BC%89%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%87%E7%89%87/"/>
    <id>https://www.nickxu.top/2022/11/06/Golang-%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97%EF%BC%88%E5%85%AD%EF%BC%89%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%87%E7%89%87/</id>
    <published>2022-11-06T12:14:30.000Z</published>
    <updated>2022-11-07T01:01:34.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文重构于 &lt;a href=&quot;https://www.nickxu.top/2022/01/24/go-qie-pian-slice/&quot;&gt;Go 切片（Slice）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Go 数组的长度不可改变，在特定场景中这样的集合就不太适用，Go 中提供了一种灵活，功能强悍的内置类型切片(“动态数组”)，与数组相比切片的长度是不固定的，可以追加元素，容量（cap）不够时会自动扩容&lt;/p&gt;
&lt;p&gt;切片为引用类型，从数组中得到的切片修改元素值时，原数组也会发生变化，修改原数组时，切片也会变化&lt;/p&gt;
&lt;h1 id=&quot;创建切片&quot;&gt;创建切片&lt;/h1&gt;
&lt;p&gt;创建切片可以有四种方法&lt;/p&gt;
&lt;h2 id=&quot;使用-var&quot;&gt;使用 &lt;code&gt;var&lt;/code&gt;&lt;/h2&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</summary>
        
      
    
    
    
    <category term="Golang" scheme="https://www.nickxu.top/categories/Golang/"/>
    
    <category term="语法速通" scheme="https://www.nickxu.top/categories/Golang/%E8%AF%AD%E6%B3%95%E9%80%9F%E9%80%9A/"/>
    
    
    <category term="Go" scheme="https://www.nickxu.top/tags/Go/"/>
    
  </entry>
  
</feed>
